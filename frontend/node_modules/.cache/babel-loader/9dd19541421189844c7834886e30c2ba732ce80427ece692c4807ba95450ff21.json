{"ast":null,"code":"const e = \"countrycode\",\n  o = \"rect\",\n  i = \"circle\",\n  a = \"proximity\",\n  t = \"place\";\nclass n {\n  static isLatitude(e) {\n    return \"\" !== e && null !== e && isFinite(e) && Math.abs(e) <= 90;\n  }\n  static isLongitude(e) {\n    return \"\" !== e && null !== e && isFinite(e) && Math.abs(e) <= 180;\n  }\n  static isNotOpenStreetMapData(e) {\n    return \"openstreetmap\" !== e.properties.datasource?.sourcename || !e.properties.place_id;\n  }\n  static extendByNonVerifiedValues(e, o, i) {\n    o.forEach(o => {\n      i.housenumber && e.allowNonVerifiedHouseNumber && \"match_by_street\" === o.properties.rank.match_type ? (this.addHouseNumberToFormatted(o.properties, null, i.housenumber), o.properties.nonVerifiedParts = [\"housenumber\"]) : i.street && i.housenumber && e.allowNonVerifiedStreet && (\"match_by_city_or_disrict\" === o.properties.rank.match_type || \"match_by_postcode\" === o.properties.rank.match_type) ? (this.addHouseNumberToFormatted(o.properties, i.street, i.housenumber), o.properties.nonVerifiedParts = [\"housenumber\", \"street\"]) : i.street && e.allowNonVerifiedStreet && (\"match_by_city_or_disrict\" === o.properties.rank.match_type || \"match_by_postcode\" === o.properties.rank.match_type) && (o.properties.street = i.street.replace(/(^\\w|\\s\\w|[-]\\w)/g, e => e.toUpperCase()), o.properties.address_line1 = o.properties.street, o.properties.address_line2 = o.properties.formatted, o.properties.formatted = o.properties.street + \", \" + o.properties.formatted, o.properties.nonVerifiedParts = [\"street\"]);\n    });\n  }\n  static addHouseNumberToFormatted(e, o, i) {\n    const a = {\n        \"{{{road}}} {{{house_number}}}\": [\"af\", \"ai\", \"al\", \"ao\", \"ar\", \"at\", \"aw\", \"ax\", \"ba\", \"be\", \"bg\", \"bi\", \"bo\", \"bq\", \"br\", \"bs\", \"bt\", \"bv\", \"bw\", \"cf\", \"ch\", \"cl\", \"cm\", \"co\", \"cr\", \"cu\", \"cv\", \"cw\", \"cy\", \"cz\", \"de\", \"dk\", \"do\", \"ec\", \"ee\", \"eh\", \"er\", \"et\", \"fi\", \"fo\", \"gd\", \"ge\", \"gl\", \"gq\", \"gr\", \"gt\", \"gw\", \"hn\", \"hr\", \"ht\", \"hu\", \"id\", \"il\", \"ir\", \"is\", \"jo\", \"ki\", \"km\", \"kp\", \"kw\", \"lc\", \"li\", \"lr\", \"lt\", \"lv\", \"ly\", \"me\", \"mk\", \"ml\", \"mn\", \"mo\", \"mx\", \"ni\", \"nl\", \"no\", \"np\", \"pa\", \"pe\", \"pl\", \"ps\", \"pt\", \"pw\", \"py\", \"qa\", \"ro\", \"rs\", \"ru\", \"sb\", \"sd\", \"se\", \"si\", \"sj\", \"sk\", \"so\", \"sr\", \"ss\", \"st\", \"sv\", \"sx\", \"sz\", \"td\", \"tj\", \"tl\", \"tr\", \"um\", \"uz\", \"uy\", \"vc\", \"ve\", \"vu\", \"ws\"],\n        \"{{{house_number}}} {{{road}}}\": [\"ad\", \"ae\", \"ag\", \"am\", \"as\", \"au\", \"az\", \"bb\", \"bd\", \"bf\", \"bh\", \"bl\", \"bm\", \"bz\", \"ca\", \"cc\", \"ci\", \"ck\", \"cn\", \"cx\", \"dj\", \"dm\", \"dz\", \"eg\", \"fj\", \"fk\", \"fm\", \"fr\", \"ga\", \"gb\", \"gf\", \"gg\", \"gh\", \"gi\", \"gm\", \"gn\", \"gp\", \"gs\", \"gu\", \"gy\", \"hk\", \"hm\", \"ie\", \"im\", \"io\", \"iq\", \"je\", \"jm\", \"jp\", \"ke\", \"kh\", \"kn\", \"kr\", \"ky\", \"lb\", \"lk\", \"ls\", \"lu\", \"ma\", \"mc\", \"mf\", \"mh\", \"mg\", \"mm\", \"mp\", \"ms\", \"mt\", \"mq\", \"mv\", \"mw\", \"my\", \"na\", \"nc\", \"ne\", \"nf\", \"ng\", \"nr\", \"nu\", \"nz\", \"om\", \"pf\", \"pg\", \"ph\", \"pk\", \"pm\", \"pr\", \"re\", \"rw\", \"sa\", \"sc\", \"sg\", \"sh\", \"sl\", \"sn\", \"tc\", \"tf\", \"th\", \"tk\", \"tn\", \"to\", \"tt\", \"tv\", \"tw\", \"tz\", \"ug\", \"us\", \"vg\", \"vi\", \"wf\", \"yt\", \"za\", \"zm\", \"zw\"],\n        \"{{{road}}}, {{{house_number}}}\": [\"by\", \"es\", \"it\", \"kg\", \"kz\", \"md\", \"mz\", \"sm\", \"sy\", \"ua\", \"va\"],\n        \"{{{house_number}}}, {{{road}}}\": [\"bj\", \"bn\", \"cd\", \"cg\", \"in\", \"la\", \"mr\", \"mu\", \"tg\", \"tm\", \"vn\", \"ye\"]\n      },\n      t = Object.keys(a).find(o => a[o].indexOf(e.country_code) >= 0) || \"{{{road}}} {{{house_number}}}\";\n    if (o) {\n      e.street = o.replace(/(^\\w|\\s\\w|[-]\\w)/g, e => e.toUpperCase()), e.housenumber = i;\n      const a = t.replace(\"{{{road}}}\", e.street).replace(\"{{{house_number}}}\", i);\n      e.address_line1 = a, e.address_line2 = e.formatted, e.formatted = a + \", \" + e.formatted;\n    } else {\n      e.housenumber = i;\n      const o = t.replace(\"{{{road}}}\", e.street).replace(\"{{{house_number}}}\", i);\n      e.address_line1 = e.address_line1.replace(e.street, o), e.formatted = e.formatted.replace(e.street, o);\n    }\n  }\n  static generatePlacesUrl(e, o, i, a) {\n    let t = `${e}?id=${o}&apiKey=${i}`;\n    return a.lang && (t += `&lang=${a.lang}`), t;\n  }\n  static needToFilterDataBySuggestionsFilter(e, o) {\n    return e && e.length && o && \"function\" == typeof o;\n  }\n  static needToCalculateExtendByNonVerifiedValues(e, o) {\n    return e.features && e.features.length && e?.query?.parsed && (o.allowNonVerifiedHouseNumber || o.allowNonVerifiedStreet);\n  }\n  static generateUrl(d, l, r, s) {\n    let c = `${l}?text=${encodeURIComponent(d)}&apiKey=${r}`;\n    s.type && (c += `&type=${s.type}`), s.limit && (c += `&limit=${s.limit}`), s.lang && (c += `&lang=${s.lang}`);\n    const F = [],\n      m = s.filter[e],\n      u = s.filter[i],\n      f = s.filter[o],\n      U = s.filter[t];\n    m && m.length && F.push(`countrycode:${m.join(\",\").toLowerCase()}`), u && n.isLatitude(u.lat) && n.isLongitude(u.lon) && u.radiusMeters > 0 && F.push(`circle:${u.lon},${u.lat},${u.radiusMeters}`), f && n.isLatitude(f.lat1) && n.isLongitude(f.lon1) && n.isLatitude(f.lat2) && n.isLongitude(f.lon2) && F.push(`rect:${f.lon1},${f.lat1},${f.lon2},${f.lat2}`), U && F.push(`place:${U}`), c += F.length ? `&filter=${F.join(\"|\")}` : \"\";\n    const g = [],\n      h = s.bias[e],\n      C = s.bias[i],\n      p = s.bias[o],\n      E = s.bias[a];\n    return h && h.length && g.push(`countrycode:${h.join(\",\").toLowerCase()}`), C && n.isLatitude(C.lat) && n.isLongitude(C.lon) && C.radiusMeters > 0 && g.push(`circle:${C.lon},${C.lat},${C.radiusMeters}`), p && n.isLatitude(p.lat1) && n.isLongitude(p.lon1) && n.isLatitude(p.lat2) && n.isLongitude(p.lon2) && g.push(`rect:${p.lon1},${p.lat1},${p.lon2},${p.lat2}`), E && n.isLatitude(E.lat) && n.isLongitude(E.lon) && g.push(`proximity:${E.lon},${E.lat}`), c += g.length ? `&bias=${g.join(\"|\")}` : \"\", c;\n  }\n  static returnIfFunction(e) {\n    return e && \"function\" == typeof e ? e : null;\n  }\n}\nvar d = [{\n  code: \"AD\",\n  emoji: \"ðŸ‡¦ðŸ‡©\",\n  unicode: \"U+1F1E6 U+1F1E9\",\n  name: \"Andorra\",\n  title: \"flag for Andorra\",\n  dialCode: \"+376\"\n}, {\n  code: \"AE\",\n  emoji: \"ðŸ‡¦ðŸ‡ª\",\n  unicode: \"U+1F1E6 U+1F1EA\",\n  name: \"United Arab Emirates\",\n  title: \"flag for United Arab Emirates\",\n  dialCode: \"+971\"\n}, {\n  code: \"AF\",\n  emoji: \"ðŸ‡¦ðŸ‡«\",\n  unicode: \"U+1F1E6 U+1F1EB\",\n  name: \"Afghanistan\",\n  title: \"flag for Afghanistan\",\n  dialCode: \"+93\"\n}, {\n  code: \"AG\",\n  emoji: \"ðŸ‡¦ðŸ‡¬\",\n  unicode: \"U+1F1E6 U+1F1EC\",\n  name: \"Antigua and Barbuda\",\n  title: \"flag for Antigua and Barbuda\",\n  dialCode: \"+1268\"\n}, {\n  code: \"AI\",\n  emoji: \"ðŸ‡¦ðŸ‡®\",\n  unicode: \"U+1F1E6 U+1F1EE\",\n  name: \"Anguilla\",\n  title: \"flag for Anguilla\",\n  dialCode: \"+1 264\"\n}, {\n  code: \"AL\",\n  emoji: \"ðŸ‡¦ðŸ‡±\",\n  unicode: \"U+1F1E6 U+1F1F1\",\n  name: \"Albania\",\n  title: \"flag for Albania\",\n  dialCode: \"+355\"\n}, {\n  code: \"AM\",\n  emoji: \"ðŸ‡¦ðŸ‡²\",\n  unicode: \"U+1F1E6 U+1F1F2\",\n  name: \"Armenia\",\n  title: \"flag for Armenia\",\n  dialCode: \"+374\"\n}, {\n  code: \"AO\",\n  emoji: \"ðŸ‡¦ðŸ‡´\",\n  unicode: \"U+1F1E6 U+1F1F4\",\n  name: \"Angola\",\n  title: \"flag for Angola\",\n  dialCode: \"+244\"\n}, {\n  code: \"AQ\",\n  emoji: \"ðŸ‡¦ðŸ‡¶\",\n  unicode: \"U+1F1E6 U+1F1F6\",\n  name: \"Antarctica\",\n  title: \"flag for Antarctica\",\n  dialCode: null\n}, {\n  code: \"AR\",\n  emoji: \"ðŸ‡¦ðŸ‡·\",\n  unicode: \"U+1F1E6 U+1F1F7\",\n  name: \"Argentina\",\n  title: \"flag for Argentina\",\n  dialCode: \"+54\"\n}, {\n  code: \"AS\",\n  emoji: \"ðŸ‡¦ðŸ‡¸\",\n  unicode: \"U+1F1E6 U+1F1F8\",\n  name: \"American Samoa\",\n  title: \"flag for American Samoa\",\n  dialCode: \"+1 684\"\n}, {\n  code: \"AT\",\n  emoji: \"ðŸ‡¦ðŸ‡¹\",\n  unicode: \"U+1F1E6 U+1F1F9\",\n  name: \"Austria\",\n  title: \"flag for Austria\",\n  dialCode: \"+43\"\n}, {\n  code: \"AU\",\n  emoji: \"ðŸ‡¦ðŸ‡º\",\n  unicode: \"U+1F1E6 U+1F1FA\",\n  name: \"Australia\",\n  title: \"flag for Australia\",\n  dialCode: \"+61\"\n}, {\n  code: \"AW\",\n  emoji: \"ðŸ‡¦ðŸ‡¼\",\n  unicode: \"U+1F1E6 U+1F1FC\",\n  name: \"Aruba\",\n  title: \"flag for Aruba\",\n  dialCode: \"+297\"\n}, {\n  code: \"AX\",\n  emoji: \"ðŸ‡¦ðŸ‡½\",\n  unicode: \"U+1F1E6 U+1F1FD\",\n  name: \"Ã…land Islands\",\n  title: \"flag for Ã…land Islands\",\n  dialCode: \"\"\n}, {\n  code: \"AZ\",\n  emoji: \"ðŸ‡¦ðŸ‡¿\",\n  unicode: \"U+1F1E6 U+1F1FF\",\n  name: \"Azerbaijan\",\n  title: \"flag for Azerbaijan\",\n  dialCode: \"+994\"\n}, {\n  code: \"BA\",\n  emoji: \"ðŸ‡§ðŸ‡¦\",\n  unicode: \"U+1F1E7 U+1F1E6\",\n  name: \"Bosnia and Herzegovina\",\n  title: \"flag for Bosnia and Herzegovina\",\n  dialCode: \"+387\"\n}, {\n  code: \"BB\",\n  emoji: \"ðŸ‡§ðŸ‡§\",\n  unicode: \"U+1F1E7 U+1F1E7\",\n  name: \"Barbados\",\n  title: \"flag for Barbados\",\n  dialCode: \"+1 246\"\n}, {\n  code: \"BD\",\n  emoji: \"ðŸ‡§ðŸ‡©\",\n  unicode: \"U+1F1E7 U+1F1E9\",\n  name: \"Bangladesh\",\n  title: \"flag for Bangladesh\",\n  dialCode: \"+880\"\n}, {\n  code: \"BE\",\n  emoji: \"ðŸ‡§ðŸ‡ª\",\n  unicode: \"U+1F1E7 U+1F1EA\",\n  name: \"Belgium\",\n  title: \"flag for Belgium\",\n  dialCode: \"+32\"\n}, {\n  code: \"BF\",\n  emoji: \"ðŸ‡§ðŸ‡«\",\n  unicode: \"U+1F1E7 U+1F1EB\",\n  name: \"Burkina Faso\",\n  title: \"flag for Burkina Faso\",\n  dialCode: \"+226\"\n}, {\n  code: \"BG\",\n  emoji: \"ðŸ‡§ðŸ‡¬\",\n  unicode: \"U+1F1E7 U+1F1EC\",\n  name: \"Bulgaria\",\n  title: \"flag for Bulgaria\",\n  dialCode: \"+359\"\n}, {\n  code: \"BH\",\n  emoji: \"ðŸ‡§ðŸ‡­\",\n  unicode: \"U+1F1E7 U+1F1ED\",\n  name: \"Bahrain\",\n  title: \"flag for Bahrain\",\n  dialCode: \"+973\"\n}, {\n  code: \"BI\",\n  emoji: \"ðŸ‡§ðŸ‡®\",\n  unicode: \"U+1F1E7 U+1F1EE\",\n  name: \"Burundi\",\n  title: \"flag for Burundi\",\n  dialCode: \"+257\"\n}, {\n  code: \"BJ\",\n  emoji: \"ðŸ‡§ðŸ‡¯\",\n  unicode: \"U+1F1E7 U+1F1EF\",\n  name: \"Benin\",\n  title: \"flag for Benin\",\n  dialCode: \"+229\"\n}, {\n  code: \"BL\",\n  emoji: \"ðŸ‡§ðŸ‡±\",\n  unicode: \"U+1F1E7 U+1F1F1\",\n  name: \"Saint BarthÃ©lemy\",\n  title: \"flag for Saint BarthÃ©lemy\",\n  dialCode: \"+590\"\n}, {\n  code: \"BM\",\n  emoji: \"ðŸ‡§ðŸ‡²\",\n  unicode: \"U+1F1E7 U+1F1F2\",\n  name: \"Bermuda\",\n  title: \"flag for Bermuda\",\n  dialCode: \"+1 441\"\n}, {\n  code: \"BN\",\n  emoji: \"ðŸ‡§ðŸ‡³\",\n  unicode: \"U+1F1E7 U+1F1F3\",\n  name: \"Brunei Darussalam\",\n  title: \"flag for Brunei Darussalam\",\n  dialCode: \"+673\"\n}, {\n  code: \"BO\",\n  emoji: \"ðŸ‡§ðŸ‡´\",\n  unicode: \"U+1F1E7 U+1F1F4\",\n  name: \"Bolivia\",\n  title: \"flag for Bolivia\",\n  dialCode: \"+591\"\n}, {\n  code: \"BQ\",\n  emoji: \"ðŸ‡§ðŸ‡¶\",\n  unicode: \"U+1F1E7 U+1F1F6\",\n  name: \"Bonaire, Sint Eustatius and Saba\",\n  title: \"flag for Bonaire, Sint Eustatius and Saba\"\n}, {\n  code: \"BR\",\n  emoji: \"ðŸ‡§ðŸ‡·\",\n  unicode: \"U+1F1E7 U+1F1F7\",\n  name: \"Brazil\",\n  title: \"flag for Brazil\",\n  dialCode: \"+55\"\n}, {\n  code: \"BS\",\n  emoji: \"ðŸ‡§ðŸ‡¸\",\n  unicode: \"U+1F1E7 U+1F1F8\",\n  name: \"Bahamas\",\n  title: \"flag for Bahamas\",\n  dialCode: \"+1 242\"\n}, {\n  code: \"BT\",\n  emoji: \"ðŸ‡§ðŸ‡¹\",\n  unicode: \"U+1F1E7 U+1F1F9\",\n  name: \"Bhutan\",\n  title: \"flag for Bhutan\",\n  dialCode: \"+975\"\n}, {\n  code: \"BV\",\n  emoji: \"ðŸ‡§ðŸ‡»\",\n  unicode: \"U+1F1E7 U+1F1FB\",\n  name: \"Bouvet Island\",\n  title: \"flag for Bouvet Island\"\n}, {\n  code: \"BW\",\n  emoji: \"ðŸ‡§ðŸ‡¼\",\n  unicode: \"U+1F1E7 U+1F1FC\",\n  name: \"Botswana\",\n  title: \"flag for Botswana\",\n  dialCode: \"+267\"\n}, {\n  code: \"BY\",\n  emoji: \"ðŸ‡§ðŸ‡¾\",\n  unicode: \"U+1F1E7 U+1F1FE\",\n  name: \"Belarus\",\n  title: \"flag for Belarus\",\n  dialCode: \"+375\"\n}, {\n  code: \"BZ\",\n  emoji: \"ðŸ‡§ðŸ‡¿\",\n  unicode: \"U+1F1E7 U+1F1FF\",\n  name: \"Belize\",\n  title: \"flag for Belize\",\n  dialCode: \"+501\"\n}, {\n  code: \"CA\",\n  emoji: \"ðŸ‡¨ðŸ‡¦\",\n  unicode: \"U+1F1E8 U+1F1E6\",\n  name: \"Canada\",\n  title: \"flag for Canada\",\n  dialCode: \"+1\"\n}, {\n  code: \"CC\",\n  emoji: \"ðŸ‡¨ðŸ‡¨\",\n  unicode: \"U+1F1E8 U+1F1E8\",\n  name: \"Cocos (Keeling) Islands\",\n  title: \"flag for Cocos (Keeling) Islands\",\n  dialCode: \"+61\"\n}, {\n  code: \"CD\",\n  emoji: \"ðŸ‡¨ðŸ‡©\",\n  unicode: \"U+1F1E8 U+1F1E9\",\n  name: \"Congo\",\n  title: \"flag for Congo\",\n  dialCode: \"+243\"\n}, {\n  code: \"CF\",\n  emoji: \"ðŸ‡¨ðŸ‡«\",\n  unicode: \"U+1F1E8 U+1F1EB\",\n  name: \"Central African Republic\",\n  title: \"flag for Central African Republic\",\n  dialCode: \"+236\"\n}, {\n  code: \"CG\",\n  emoji: \"ðŸ‡¨ðŸ‡¬\",\n  unicode: \"U+1F1E8 U+1F1EC\",\n  name: \"Congo\",\n  title: \"flag for Congo\",\n  dialCode: \"+242\"\n}, {\n  code: \"CH\",\n  emoji: \"ðŸ‡¨ðŸ‡­\",\n  unicode: \"U+1F1E8 U+1F1ED\",\n  name: \"Switzerland\",\n  title: \"flag for Switzerland\",\n  dialCode: \"+41\"\n}, {\n  code: \"CI\",\n  emoji: \"ðŸ‡¨ðŸ‡®\",\n  unicode: \"U+1F1E8 U+1F1EE\",\n  name: \"CÃ´te D'Ivoire\",\n  title: \"flag for CÃ´te D'Ivoire\",\n  dialCode: \"+225\"\n}, {\n  code: \"CK\",\n  emoji: \"ðŸ‡¨ðŸ‡°\",\n  unicode: \"U+1F1E8 U+1F1F0\",\n  name: \"Cook Islands\",\n  title: \"flag for Cook Islands\",\n  dialCode: \"+682\"\n}, {\n  code: \"CL\",\n  emoji: \"ðŸ‡¨ðŸ‡±\",\n  unicode: \"U+1F1E8 U+1F1F1\",\n  name: \"Chile\",\n  title: \"flag for Chile\",\n  dialCode: \"+56\"\n}, {\n  code: \"CM\",\n  emoji: \"ðŸ‡¨ðŸ‡²\",\n  unicode: \"U+1F1E8 U+1F1F2\",\n  name: \"Cameroon\",\n  title: \"flag for Cameroon\",\n  dialCode: \"+237\"\n}, {\n  code: \"CN\",\n  emoji: \"ðŸ‡¨ðŸ‡³\",\n  unicode: \"U+1F1E8 U+1F1F3\",\n  name: \"China\",\n  title: \"flag for China\",\n  dialCode: \"+86\"\n}, {\n  code: \"CO\",\n  emoji: \"ðŸ‡¨ðŸ‡´\",\n  unicode: \"U+1F1E8 U+1F1F4\",\n  name: \"Colombia\",\n  title: \"flag for Colombia\",\n  dialCode: \"+57\"\n}, {\n  code: \"CR\",\n  emoji: \"ðŸ‡¨ðŸ‡·\",\n  unicode: \"U+1F1E8 U+1F1F7\",\n  name: \"Costa Rica\",\n  title: \"flag for Costa Rica\",\n  dialCode: \"+506\"\n}, {\n  code: \"CU\",\n  emoji: \"ðŸ‡¨ðŸ‡º\",\n  unicode: \"U+1F1E8 U+1F1FA\",\n  name: \"Cuba\",\n  title: \"flag for Cuba\",\n  dialCode: \"+53\"\n}, {\n  code: \"CV\",\n  emoji: \"ðŸ‡¨ðŸ‡»\",\n  unicode: \"U+1F1E8 U+1F1FB\",\n  name: \"Cape Verde\",\n  title: \"flag for Cape Verde\",\n  dialCode: \"+238\"\n}, {\n  code: \"CW\",\n  emoji: \"ðŸ‡¨ðŸ‡¼\",\n  unicode: \"U+1F1E8 U+1F1FC\",\n  name: \"CuraÃ§ao\",\n  title: \"flag for CuraÃ§ao\"\n}, {\n  code: \"CX\",\n  emoji: \"ðŸ‡¨ðŸ‡½\",\n  unicode: \"U+1F1E8 U+1F1FD\",\n  name: \"Christmas Island\",\n  title: \"flag for Christmas Island\",\n  dialCode: \"+61\"\n}, {\n  code: \"CY\",\n  emoji: \"ðŸ‡¨ðŸ‡¾\",\n  unicode: \"U+1F1E8 U+1F1FE\",\n  name: \"Cyprus\",\n  title: \"flag for Cyprus\",\n  dialCode: \"+537\"\n}, {\n  code: \"CZ\",\n  emoji: \"ðŸ‡¨ðŸ‡¿\",\n  unicode: \"U+1F1E8 U+1F1FF\",\n  name: \"Czech Republic\",\n  title: \"flag for Czech Republic\",\n  dialCode: \"+420\"\n}, {\n  code: \"DE\",\n  emoji: \"ðŸ‡©ðŸ‡ª\",\n  unicode: \"U+1F1E9 U+1F1EA\",\n  name: \"Germany\",\n  title: \"flag for Germany\",\n  dialCode: \"+49\"\n}, {\n  code: \"DJ\",\n  emoji: \"ðŸ‡©ðŸ‡¯\",\n  unicode: \"U+1F1E9 U+1F1EF\",\n  name: \"Djibouti\",\n  title: \"flag for Djibouti\",\n  dialCode: \"+253\"\n}, {\n  code: \"DK\",\n  emoji: \"ðŸ‡©ðŸ‡°\",\n  unicode: \"U+1F1E9 U+1F1F0\",\n  name: \"Denmark\",\n  title: \"flag for Denmark\",\n  dialCode: \"+45\"\n}, {\n  code: \"DM\",\n  emoji: \"ðŸ‡©ðŸ‡²\",\n  unicode: \"U+1F1E9 U+1F1F2\",\n  name: \"Dominica\",\n  title: \"flag for Dominica\",\n  dialCode: \"+1 767\"\n}, {\n  code: \"DO\",\n  emoji: \"ðŸ‡©ðŸ‡´\",\n  unicode: \"U+1F1E9 U+1F1F4\",\n  name: \"Dominican Republic\",\n  title: \"flag for Dominican Republic\",\n  dialCode: \"+1 849\"\n}, {\n  code: \"DZ\",\n  emoji: \"ðŸ‡©ðŸ‡¿\",\n  unicode: \"U+1F1E9 U+1F1FF\",\n  name: \"Algeria\",\n  title: \"flag for Algeria\",\n  dialCode: \"+213\"\n}, {\n  code: \"EC\",\n  emoji: \"ðŸ‡ªðŸ‡¨\",\n  unicode: \"U+1F1EA U+1F1E8\",\n  name: \"Ecuador\",\n  title: \"flag for Ecuador\",\n  dialCode: \"+593\"\n}, {\n  code: \"EE\",\n  emoji: \"ðŸ‡ªðŸ‡ª\",\n  unicode: \"U+1F1EA U+1F1EA\",\n  name: \"Estonia\",\n  title: \"flag for Estonia\",\n  dialCode: \"+372\"\n}, {\n  code: \"EG\",\n  emoji: \"ðŸ‡ªðŸ‡¬\",\n  unicode: \"U+1F1EA U+1F1EC\",\n  name: \"Egypt\",\n  title: \"flag for Egypt\",\n  dialCode: \"+20\"\n}, {\n  code: \"EH\",\n  emoji: \"ðŸ‡ªðŸ‡­\",\n  unicode: \"U+1F1EA U+1F1ED\",\n  name: \"Western Sahara\",\n  title: \"flag for Western Sahara\"\n}, {\n  code: \"ER\",\n  emoji: \"ðŸ‡ªðŸ‡·\",\n  unicode: \"U+1F1EA U+1F1F7\",\n  name: \"Eritrea\",\n  title: \"flag for Eritrea\",\n  dialCode: \"+291\"\n}, {\n  code: \"ES\",\n  emoji: \"ðŸ‡ªðŸ‡¸\",\n  unicode: \"U+1F1EA U+1F1F8\",\n  name: \"Spain\",\n  title: \"flag for Spain\",\n  dialCode: \"+34\"\n}, {\n  code: \"ET\",\n  emoji: \"ðŸ‡ªðŸ‡¹\",\n  unicode: \"U+1F1EA U+1F1F9\",\n  name: \"Ethiopia\",\n  title: \"flag for Ethiopia\",\n  dialCode: \"+251\"\n}, {\n  code: \"EU\",\n  emoji: \"ðŸ‡ªðŸ‡º\",\n  unicode: \"U+1F1EA U+1F1FA\",\n  name: \"European Union\",\n  title: \"flag for European Union\"\n}, {\n  code: \"FI\",\n  emoji: \"ðŸ‡«ðŸ‡®\",\n  unicode: \"U+1F1EB U+1F1EE\",\n  name: \"Finland\",\n  title: \"flag for Finland\",\n  dialCode: \"+358\"\n}, {\n  code: \"FJ\",\n  emoji: \"ðŸ‡«ðŸ‡¯\",\n  unicode: \"U+1F1EB U+1F1EF\",\n  name: \"Fiji\",\n  title: \"flag for Fiji\",\n  dialCode: \"+679\"\n}, {\n  code: \"FK\",\n  emoji: \"ðŸ‡«ðŸ‡°\",\n  unicode: \"U+1F1EB U+1F1F0\",\n  name: \"Falkland Islands (Malvinas)\",\n  title: \"flag for Falkland Islands (Malvinas)\",\n  dialCode: \"+500\"\n}, {\n  code: \"FM\",\n  emoji: \"ðŸ‡«ðŸ‡²\",\n  unicode: \"U+1F1EB U+1F1F2\",\n  name: \"Micronesia\",\n  title: \"flag for Micronesia\",\n  dialCode: \"+691\"\n}, {\n  code: \"FO\",\n  emoji: \"ðŸ‡«ðŸ‡´\",\n  unicode: \"U+1F1EB U+1F1F4\",\n  name: \"Faroe Islands\",\n  title: \"flag for Faroe Islands\",\n  dialCode: \"+298\"\n}, {\n  code: \"FR\",\n  emoji: \"ðŸ‡«ðŸ‡·\",\n  unicode: \"U+1F1EB U+1F1F7\",\n  name: \"France\",\n  title: \"flag for France\",\n  dialCode: \"+33\"\n}, {\n  code: \"GA\",\n  emoji: \"ðŸ‡¬ðŸ‡¦\",\n  unicode: \"U+1F1EC U+1F1E6\",\n  name: \"Gabon\",\n  title: \"flag for Gabon\",\n  dialCode: \"+241\"\n}, {\n  code: \"GB\",\n  emoji: \"ðŸ‡¬ðŸ‡§\",\n  unicode: \"U+1F1EC U+1F1E7\",\n  name: \"United Kingdom\",\n  title: \"flag for United Kingdom\",\n  dialCode: \"+44\"\n}, {\n  code: \"GD\",\n  emoji: \"ðŸ‡¬ðŸ‡©\",\n  unicode: \"U+1F1EC U+1F1E9\",\n  name: \"Grenada\",\n  title: \"flag for Grenada\",\n  dialCode: \"+1 473\"\n}, {\n  code: \"GE\",\n  emoji: \"ðŸ‡¬ðŸ‡ª\",\n  unicode: \"U+1F1EC U+1F1EA\",\n  name: \"Georgia\",\n  title: \"flag for Georgia\",\n  dialCode: \"+995\"\n}, {\n  code: \"GF\",\n  emoji: \"ðŸ‡¬ðŸ‡«\",\n  unicode: \"U+1F1EC U+1F1EB\",\n  name: \"French Guiana\",\n  title: \"flag for French Guiana\",\n  dialCode: \"+594\"\n}, {\n  code: \"GG\",\n  emoji: \"ðŸ‡¬ðŸ‡¬\",\n  unicode: \"U+1F1EC U+1F1EC\",\n  name: \"Guernsey\",\n  title: \"flag for Guernsey\",\n  dialCode: \"+44\"\n}, {\n  code: \"GH\",\n  emoji: \"ðŸ‡¬ðŸ‡­\",\n  unicode: \"U+1F1EC U+1F1ED\",\n  name: \"Ghana\",\n  title: \"flag for Ghana\",\n  dialCode: \"+233\"\n}, {\n  code: \"GI\",\n  emoji: \"ðŸ‡¬ðŸ‡®\",\n  unicode: \"U+1F1EC U+1F1EE\",\n  name: \"Gibraltar\",\n  title: \"flag for Gibraltar\",\n  dialCode: \"+350\"\n}, {\n  code: \"GL\",\n  emoji: \"ðŸ‡¬ðŸ‡±\",\n  unicode: \"U+1F1EC U+1F1F1\",\n  name: \"Greenland\",\n  title: \"flag for Greenland\",\n  dialCode: \"+299\"\n}, {\n  code: \"GM\",\n  emoji: \"ðŸ‡¬ðŸ‡²\",\n  unicode: \"U+1F1EC U+1F1F2\",\n  name: \"Gambia\",\n  title: \"flag for Gambia\",\n  dialCode: \"+220\"\n}, {\n  code: \"GN\",\n  emoji: \"ðŸ‡¬ðŸ‡³\",\n  unicode: \"U+1F1EC U+1F1F3\",\n  name: \"Guinea\",\n  title: \"flag for Guinea\",\n  dialCode: \"+224\"\n}, {\n  code: \"GP\",\n  emoji: \"ðŸ‡¬ðŸ‡µ\",\n  unicode: \"U+1F1EC U+1F1F5\",\n  name: \"Guadeloupe\",\n  title: \"flag for Guadeloupe\",\n  dialCode: \"+590\"\n}, {\n  code: \"GQ\",\n  emoji: \"ðŸ‡¬ðŸ‡¶\",\n  unicode: \"U+1F1EC U+1F1F6\",\n  name: \"Equatorial Guinea\",\n  title: \"flag for Equatorial Guinea\",\n  dialCode: \"+240\"\n}, {\n  code: \"GR\",\n  emoji: \"ðŸ‡¬ðŸ‡·\",\n  unicode: \"U+1F1EC U+1F1F7\",\n  name: \"Greece\",\n  title: \"flag for Greece\",\n  dialCode: \"+30\"\n}, {\n  code: \"GS\",\n  emoji: \"ðŸ‡¬ðŸ‡¸\",\n  unicode: \"U+1F1EC U+1F1F8\",\n  name: \"South Georgia\",\n  title: \"flag for South Georgia\",\n  dialCode: \"+500\"\n}, {\n  code: \"GT\",\n  emoji: \"ðŸ‡¬ðŸ‡¹\",\n  unicode: \"U+1F1EC U+1F1F9\",\n  name: \"Guatemala\",\n  title: \"flag for Guatemala\",\n  dialCode: \"+502\"\n}, {\n  code: \"GU\",\n  emoji: \"ðŸ‡¬ðŸ‡º\",\n  unicode: \"U+1F1EC U+1F1FA\",\n  name: \"Guam\",\n  title: \"flag for Guam\",\n  dialCode: \"+1 671\"\n}, {\n  code: \"GW\",\n  emoji: \"ðŸ‡¬ðŸ‡¼\",\n  unicode: \"U+1F1EC U+1F1FC\",\n  name: \"Guinea-Bissau\",\n  title: \"flag for Guinea-Bissau\",\n  dialCode: \"+245\"\n}, {\n  code: \"GY\",\n  emoji: \"ðŸ‡¬ðŸ‡¾\",\n  unicode: \"U+1F1EC U+1F1FE\",\n  name: \"Guyana\",\n  title: \"flag for Guyana\",\n  dialCode: \"+595\"\n}, {\n  code: \"HK\",\n  emoji: \"ðŸ‡­ðŸ‡°\",\n  unicode: \"U+1F1ED U+1F1F0\",\n  name: \"Hong Kong\",\n  title: \"flag for Hong Kong\",\n  dialCode: \"+852\"\n}, {\n  code: \"HM\",\n  emoji: \"ðŸ‡­ðŸ‡²\",\n  unicode: \"U+1F1ED U+1F1F2\",\n  name: \"Heard Island and Mcdonald Islands\",\n  title: \"flag for Heard Island and Mcdonald Islands\"\n}, {\n  code: \"HN\",\n  emoji: \"ðŸ‡­ðŸ‡³\",\n  unicode: \"U+1F1ED U+1F1F3\",\n  name: \"Honduras\",\n  title: \"flag for Honduras\",\n  dialCode: \"+504\"\n}, {\n  code: \"HR\",\n  emoji: \"ðŸ‡­ðŸ‡·\",\n  unicode: \"U+1F1ED U+1F1F7\",\n  name: \"Croatia\",\n  title: \"flag for Croatia\",\n  dialCode: \"+385\"\n}, {\n  code: \"HT\",\n  emoji: \"ðŸ‡­ðŸ‡¹\",\n  unicode: \"U+1F1ED U+1F1F9\",\n  name: \"Haiti\",\n  title: \"flag for Haiti\",\n  dialCode: \"+509\"\n}, {\n  code: \"HU\",\n  emoji: \"ðŸ‡­ðŸ‡º\",\n  unicode: \"U+1F1ED U+1F1FA\",\n  name: \"Hungary\",\n  title: \"flag for Hungary\",\n  dialCode: \"+36\"\n}, {\n  code: \"ID\",\n  emoji: \"ðŸ‡®ðŸ‡©\",\n  unicode: \"U+1F1EE U+1F1E9\",\n  name: \"Indonesia\",\n  title: \"flag for Indonesia\",\n  dialCode: \"+62\"\n}, {\n  code: \"IE\",\n  emoji: \"ðŸ‡®ðŸ‡ª\",\n  unicode: \"U+1F1EE U+1F1EA\",\n  name: \"Ireland\",\n  title: \"flag for Ireland\",\n  dialCode: \"+353\"\n}, {\n  code: \"IL\",\n  emoji: \"ðŸ‡®ðŸ‡±\",\n  unicode: \"U+1F1EE U+1F1F1\",\n  name: \"Israel\",\n  title: \"flag for Israel\",\n  dialCode: \"+972\"\n}, {\n  code: \"IM\",\n  emoji: \"ðŸ‡®ðŸ‡²\",\n  unicode: \"U+1F1EE U+1F1F2\",\n  name: \"Isle of Man\",\n  title: \"flag for Isle of Man\",\n  dialCode: \"+44\"\n}, {\n  code: \"IN\",\n  emoji: \"ðŸ‡®ðŸ‡³\",\n  unicode: \"U+1F1EE U+1F1F3\",\n  name: \"India\",\n  title: \"flag for India\",\n  dialCode: \"+91\"\n}, {\n  code: \"IO\",\n  emoji: \"ðŸ‡®ðŸ‡´\",\n  unicode: \"U+1F1EE U+1F1F4\",\n  name: \"British Indian Ocean Territory\",\n  title: \"flag for British Indian Ocean Territory\",\n  dialCode: \"+246\"\n}, {\n  code: \"IQ\",\n  emoji: \"ðŸ‡®ðŸ‡¶\",\n  unicode: \"U+1F1EE U+1F1F6\",\n  name: \"Iraq\",\n  title: \"flag for Iraq\",\n  dialCode: \"+964\"\n}, {\n  code: \"IR\",\n  emoji: \"ðŸ‡®ðŸ‡·\",\n  unicode: \"U+1F1EE U+1F1F7\",\n  name: \"Iran\",\n  title: \"flag for Iran\",\n  dialCode: \"+98\"\n}, {\n  code: \"IS\",\n  emoji: \"ðŸ‡®ðŸ‡¸\",\n  unicode: \"U+1F1EE U+1F1F8\",\n  name: \"Iceland\",\n  title: \"flag for Iceland\",\n  dialCode: \"+354\"\n}, {\n  code: \"IT\",\n  emoji: \"ðŸ‡®ðŸ‡¹\",\n  unicode: \"U+1F1EE U+1F1F9\",\n  name: \"Italy\",\n  title: \"flag for Italy\",\n  dialCode: \"+39\"\n}, {\n  code: \"JE\",\n  emoji: \"ðŸ‡¯ðŸ‡ª\",\n  unicode: \"U+1F1EF U+1F1EA\",\n  name: \"Jersey\",\n  title: \"flag for Jersey\",\n  dialCode: \"+44\"\n}, {\n  code: \"JM\",\n  emoji: \"ðŸ‡¯ðŸ‡²\",\n  unicode: \"U+1F1EF U+1F1F2\",\n  name: \"Jamaica\",\n  title: \"flag for Jamaica\",\n  dialCode: \"+1 876\"\n}, {\n  code: \"JO\",\n  emoji: \"ðŸ‡¯ðŸ‡´\",\n  unicode: \"U+1F1EF U+1F1F4\",\n  name: \"Jordan\",\n  title: \"flag for Jordan\",\n  dialCode: \"+962\"\n}, {\n  code: \"JP\",\n  emoji: \"ðŸ‡¯ðŸ‡µ\",\n  unicode: \"U+1F1EF U+1F1F5\",\n  name: \"Japan\",\n  title: \"flag for Japan\",\n  dialCode: \"+81\"\n}, {\n  code: \"KE\",\n  emoji: \"ðŸ‡°ðŸ‡ª\",\n  unicode: \"U+1F1F0 U+1F1EA\",\n  name: \"Kenya\",\n  title: \"flag for Kenya\",\n  dialCode: \"+254\"\n}, {\n  code: \"KG\",\n  emoji: \"ðŸ‡°ðŸ‡¬\",\n  unicode: \"U+1F1F0 U+1F1EC\",\n  name: \"Kyrgyzstan\",\n  title: \"flag for Kyrgyzstan\",\n  dialCode: \"+996\"\n}, {\n  code: \"KH\",\n  emoji: \"ðŸ‡°ðŸ‡­\",\n  unicode: \"U+1F1F0 U+1F1ED\",\n  name: \"Cambodia\",\n  title: \"flag for Cambodia\",\n  dialCode: \"+855\"\n}, {\n  code: \"KI\",\n  emoji: \"ðŸ‡°ðŸ‡®\",\n  unicode: \"U+1F1F0 U+1F1EE\",\n  name: \"Kiribati\",\n  title: \"flag for Kiribati\",\n  dialCode: \"+686\"\n}, {\n  code: \"KM\",\n  emoji: \"ðŸ‡°ðŸ‡²\",\n  unicode: \"U+1F1F0 U+1F1F2\",\n  name: \"Comoros\",\n  title: \"flag for Comoros\",\n  dialCode: \"+269\"\n}, {\n  code: \"KN\",\n  emoji: \"ðŸ‡°ðŸ‡³\",\n  unicode: \"U+1F1F0 U+1F1F3\",\n  name: \"Saint Kitts and Nevis\",\n  title: \"flag for Saint Kitts and Nevis\",\n  dialCode: \"+1 869\"\n}, {\n  code: \"KP\",\n  emoji: \"ðŸ‡°ðŸ‡µ\",\n  unicode: \"U+1F1F0 U+1F1F5\",\n  name: \"North Korea\",\n  title: \"flag for North Korea\",\n  dialCode: \"+850\"\n}, {\n  code: \"KR\",\n  emoji: \"ðŸ‡°ðŸ‡·\",\n  unicode: \"U+1F1F0 U+1F1F7\",\n  name: \"South Korea\",\n  title: \"flag for South Korea\",\n  dialCode: \"+82\"\n}, {\n  code: \"KW\",\n  emoji: \"ðŸ‡°ðŸ‡¼\",\n  unicode: \"U+1F1F0 U+1F1FC\",\n  name: \"Kuwait\",\n  title: \"flag for Kuwait\",\n  dialCode: \"+965\"\n}, {\n  code: \"KY\",\n  emoji: \"ðŸ‡°ðŸ‡¾\",\n  unicode: \"U+1F1F0 U+1F1FE\",\n  name: \"Cayman Islands\",\n  title: \"flag for Cayman Islands\",\n  dialCode: \"+ 345\"\n}, {\n  code: \"KZ\",\n  emoji: \"ðŸ‡°ðŸ‡¿\",\n  unicode: \"U+1F1F0 U+1F1FF\",\n  name: \"Kazakhstan\",\n  title: \"flag for Kazakhstan\",\n  dialCode: \"+7 7\"\n}, {\n  code: \"LA\",\n  emoji: \"ðŸ‡±ðŸ‡¦\",\n  unicode: \"U+1F1F1 U+1F1E6\",\n  name: \"Lao People's Democratic Republic\",\n  title: \"flag for Lao People's Democratic Republic\",\n  dialCode: \"+856\"\n}, {\n  code: \"LB\",\n  emoji: \"ðŸ‡±ðŸ‡§\",\n  unicode: \"U+1F1F1 U+1F1E7\",\n  name: \"Lebanon\",\n  title: \"flag for Lebanon\",\n  dialCode: \"+961\"\n}, {\n  code: \"LC\",\n  emoji: \"ðŸ‡±ðŸ‡¨\",\n  unicode: \"U+1F1F1 U+1F1E8\",\n  name: \"Saint Lucia\",\n  title: \"flag for Saint Lucia\",\n  dialCode: \"+1 758\"\n}, {\n  code: \"LI\",\n  emoji: \"ðŸ‡±ðŸ‡®\",\n  unicode: \"U+1F1F1 U+1F1EE\",\n  name: \"Liechtenstein\",\n  title: \"flag for Liechtenstein\",\n  dialCode: \"+423\"\n}, {\n  code: \"LK\",\n  emoji: \"ðŸ‡±ðŸ‡°\",\n  unicode: \"U+1F1F1 U+1F1F0\",\n  name: \"Sri Lanka\",\n  title: \"flag for Sri Lanka\",\n  dialCode: \"+94\"\n}, {\n  code: \"LR\",\n  emoji: \"ðŸ‡±ðŸ‡·\",\n  unicode: \"U+1F1F1 U+1F1F7\",\n  name: \"Liberia\",\n  title: \"flag for Liberia\",\n  dialCode: \"+231\"\n}, {\n  code: \"LS\",\n  emoji: \"ðŸ‡±ðŸ‡¸\",\n  unicode: \"U+1F1F1 U+1F1F8\",\n  name: \"Lesotho\",\n  title: \"flag for Lesotho\",\n  dialCode: \"+266\"\n}, {\n  code: \"LT\",\n  emoji: \"ðŸ‡±ðŸ‡¹\",\n  unicode: \"U+1F1F1 U+1F1F9\",\n  name: \"Lithuania\",\n  title: \"flag for Lithuania\",\n  dialCode: \"+370\"\n}, {\n  code: \"LU\",\n  emoji: \"ðŸ‡±ðŸ‡º\",\n  unicode: \"U+1F1F1 U+1F1FA\",\n  name: \"Luxembourg\",\n  title: \"flag for Luxembourg\",\n  dialCode: \"+352\"\n}, {\n  code: \"LV\",\n  emoji: \"ðŸ‡±ðŸ‡»\",\n  unicode: \"U+1F1F1 U+1F1FB\",\n  name: \"Latvia\",\n  title: \"flag for Latvia\",\n  dialCode: \"+371\"\n}, {\n  code: \"LY\",\n  emoji: \"ðŸ‡±ðŸ‡¾\",\n  unicode: \"U+1F1F1 U+1F1FE\",\n  name: \"Libya\",\n  title: \"flag for Libya\",\n  dialCode: \"+218\"\n}, {\n  code: \"MA\",\n  emoji: \"ðŸ‡²ðŸ‡¦\",\n  unicode: \"U+1F1F2 U+1F1E6\",\n  name: \"Morocco\",\n  title: \"flag for Morocco\",\n  dialCode: \"+212\"\n}, {\n  code: \"MC\",\n  emoji: \"ðŸ‡²ðŸ‡¨\",\n  unicode: \"U+1F1F2 U+1F1E8\",\n  name: \"Monaco\",\n  title: \"flag for Monaco\",\n  dialCode: \"+377\"\n}, {\n  code: \"MD\",\n  emoji: \"ðŸ‡²ðŸ‡©\",\n  unicode: \"U+1F1F2 U+1F1E9\",\n  name: \"Moldova\",\n  title: \"flag for Moldova\",\n  dialCode: \"+373\"\n}, {\n  code: \"ME\",\n  emoji: \"ðŸ‡²ðŸ‡ª\",\n  unicode: \"U+1F1F2 U+1F1EA\",\n  name: \"Montenegro\",\n  title: \"flag for Montenegro\",\n  dialCode: \"+382\"\n}, {\n  code: \"MF\",\n  emoji: \"ðŸ‡²ðŸ‡«\",\n  unicode: \"U+1F1F2 U+1F1EB\",\n  name: \"Saint Martin (French Part)\",\n  title: \"flag for Saint Martin (French Part)\",\n  dialCode: \"+590\"\n}, {\n  code: \"MG\",\n  emoji: \"ðŸ‡²ðŸ‡¬\",\n  unicode: \"U+1F1F2 U+1F1EC\",\n  name: \"Madagascar\",\n  title: \"flag for Madagascar\",\n  dialCode: \"+261\"\n}, {\n  code: \"MH\",\n  emoji: \"ðŸ‡²ðŸ‡­\",\n  unicode: \"U+1F1F2 U+1F1ED\",\n  name: \"Marshall Islands\",\n  title: \"flag for Marshall Islands\",\n  dialCode: \"+692\"\n}, {\n  code: \"MK\",\n  emoji: \"ðŸ‡²ðŸ‡°\",\n  unicode: \"U+1F1F2 U+1F1F0\",\n  name: \"Macedonia\",\n  title: \"flag for Macedonia\",\n  dialCode: \"+389\"\n}, {\n  code: \"ML\",\n  emoji: \"ðŸ‡²ðŸ‡±\",\n  unicode: \"U+1F1F2 U+1F1F1\",\n  name: \"Mali\",\n  title: \"flag for Mali\",\n  dialCode: \"+223\"\n}, {\n  code: \"MM\",\n  emoji: \"ðŸ‡²ðŸ‡²\",\n  unicode: \"U+1F1F2 U+1F1F2\",\n  name: \"Myanmar\",\n  title: \"flag for Myanmar\",\n  dialCode: \"+95\"\n}, {\n  code: \"MN\",\n  emoji: \"ðŸ‡²ðŸ‡³\",\n  unicode: \"U+1F1F2 U+1F1F3\",\n  name: \"Mongolia\",\n  title: \"flag for Mongolia\",\n  dialCode: \"+976\"\n}, {\n  code: \"MO\",\n  emoji: \"ðŸ‡²ðŸ‡´\",\n  unicode: \"U+1F1F2 U+1F1F4\",\n  name: \"Macao\",\n  title: \"flag for Macao\",\n  dialCode: \"+853\"\n}, {\n  code: \"MP\",\n  emoji: \"ðŸ‡²ðŸ‡µ\",\n  unicode: \"U+1F1F2 U+1F1F5\",\n  name: \"Northern Mariana Islands\",\n  title: \"flag for Northern Mariana Islands\",\n  dialCode: \"+1 670\"\n}, {\n  code: \"MQ\",\n  emoji: \"ðŸ‡²ðŸ‡¶\",\n  unicode: \"U+1F1F2 U+1F1F6\",\n  name: \"Martinique\",\n  title: \"flag for Martinique\",\n  dialCode: \"+596\"\n}, {\n  code: \"MR\",\n  emoji: \"ðŸ‡²ðŸ‡·\",\n  unicode: \"U+1F1F2 U+1F1F7\",\n  name: \"Mauritania\",\n  title: \"flag for Mauritania\",\n  dialCode: \"+222\"\n}, {\n  code: \"MS\",\n  emoji: \"ðŸ‡²ðŸ‡¸\",\n  unicode: \"U+1F1F2 U+1F1F8\",\n  name: \"Montserrat\",\n  title: \"flag for Montserrat\",\n  dialCode: \"+1664\"\n}, {\n  code: \"MT\",\n  emoji: \"ðŸ‡²ðŸ‡¹\",\n  unicode: \"U+1F1F2 U+1F1F9\",\n  name: \"Malta\",\n  title: \"flag for Malta\",\n  dialCode: \"+356\"\n}, {\n  code: \"MU\",\n  emoji: \"ðŸ‡²ðŸ‡º\",\n  unicode: \"U+1F1F2 U+1F1FA\",\n  name: \"Mauritius\",\n  title: \"flag for Mauritius\",\n  dialCode: \"+230\"\n}, {\n  code: \"MV\",\n  emoji: \"ðŸ‡²ðŸ‡»\",\n  unicode: \"U+1F1F2 U+1F1FB\",\n  name: \"Maldives\",\n  title: \"flag for Maldives\",\n  dialCode: \"+960\"\n}, {\n  code: \"MW\",\n  emoji: \"ðŸ‡²ðŸ‡¼\",\n  unicode: \"U+1F1F2 U+1F1FC\",\n  name: \"Malawi\",\n  title: \"flag for Malawi\",\n  dialCode: \"+265\"\n}, {\n  code: \"MX\",\n  emoji: \"ðŸ‡²ðŸ‡½\",\n  unicode: \"U+1F1F2 U+1F1FD\",\n  name: \"Mexico\",\n  title: \"flag for Mexico\",\n  dialCode: \"+52\"\n}, {\n  code: \"MY\",\n  emoji: \"ðŸ‡²ðŸ‡¾\",\n  unicode: \"U+1F1F2 U+1F1FE\",\n  name: \"Malaysia\",\n  title: \"flag for Malaysia\",\n  dialCode: \"+60\"\n}, {\n  code: \"MZ\",\n  emoji: \"ðŸ‡²ðŸ‡¿\",\n  unicode: \"U+1F1F2 U+1F1FF\",\n  name: \"Mozambique\",\n  title: \"flag for Mozambique\",\n  dialCode: \"+258\"\n}, {\n  code: \"NA\",\n  emoji: \"ðŸ‡³ðŸ‡¦\",\n  unicode: \"U+1F1F3 U+1F1E6\",\n  name: \"Namibia\",\n  title: \"flag for Namibia\",\n  dialCode: \"+264\"\n}, {\n  code: \"NC\",\n  emoji: \"ðŸ‡³ðŸ‡¨\",\n  unicode: \"U+1F1F3 U+1F1E8\",\n  name: \"New Caledonia\",\n  title: \"flag for New Caledonia\",\n  dialCode: \"+687\"\n}, {\n  code: \"NE\",\n  emoji: \"ðŸ‡³ðŸ‡ª\",\n  unicode: \"U+1F1F3 U+1F1EA\",\n  name: \"Niger\",\n  title: \"flag for Niger\",\n  dialCode: \"+227\"\n}, {\n  code: \"NF\",\n  emoji: \"ðŸ‡³ðŸ‡«\",\n  unicode: \"U+1F1F3 U+1F1EB\",\n  name: \"Norfolk Island\",\n  title: \"flag for Norfolk Island\",\n  dialCode: \"+672\"\n}, {\n  code: \"NG\",\n  emoji: \"ðŸ‡³ðŸ‡¬\",\n  unicode: \"U+1F1F3 U+1F1EC\",\n  name: \"Nigeria\",\n  title: \"flag for Nigeria\",\n  dialCode: \"+234\"\n}, {\n  code: \"NI\",\n  emoji: \"ðŸ‡³ðŸ‡®\",\n  unicode: \"U+1F1F3 U+1F1EE\",\n  name: \"Nicaragua\",\n  title: \"flag for Nicaragua\",\n  dialCode: \"+505\"\n}, {\n  code: \"NL\",\n  emoji: \"ðŸ‡³ðŸ‡±\",\n  unicode: \"U+1F1F3 U+1F1F1\",\n  name: \"Netherlands\",\n  title: \"flag for Netherlands\",\n  dialCode: \"+31\"\n}, {\n  code: \"NO\",\n  emoji: \"ðŸ‡³ðŸ‡´\",\n  unicode: \"U+1F1F3 U+1F1F4\",\n  name: \"Norway\",\n  title: \"flag for Norway\",\n  dialCode: \"+47\"\n}, {\n  code: \"NP\",\n  emoji: \"ðŸ‡³ðŸ‡µ\",\n  unicode: \"U+1F1F3 U+1F1F5\",\n  name: \"Nepal\",\n  title: \"flag for Nepal\",\n  dialCode: \"+977\"\n}, {\n  code: \"NR\",\n  emoji: \"ðŸ‡³ðŸ‡·\",\n  unicode: \"U+1F1F3 U+1F1F7\",\n  name: \"Nauru\",\n  title: \"flag for Nauru\",\n  dialCode: \"+674\"\n}, {\n  code: \"NU\",\n  emoji: \"ðŸ‡³ðŸ‡º\",\n  unicode: \"U+1F1F3 U+1F1FA\",\n  name: \"Niue\",\n  title: \"flag for Niue\",\n  dialCode: \"+683\"\n}, {\n  code: \"NZ\",\n  emoji: \"ðŸ‡³ðŸ‡¿\",\n  unicode: \"U+1F1F3 U+1F1FF\",\n  name: \"New Zealand\",\n  title: \"flag for New Zealand\",\n  dialCode: \"+64\"\n}, {\n  code: \"OM\",\n  emoji: \"ðŸ‡´ðŸ‡²\",\n  unicode: \"U+1F1F4 U+1F1F2\",\n  name: \"Oman\",\n  title: \"flag for Oman\",\n  dialCode: \"+968\"\n}, {\n  code: \"PA\",\n  emoji: \"ðŸ‡µðŸ‡¦\",\n  unicode: \"U+1F1F5 U+1F1E6\",\n  name: \"Panama\",\n  title: \"flag for Panama\",\n  dialCode: \"+507\"\n}, {\n  code: \"PE\",\n  emoji: \"ðŸ‡µðŸ‡ª\",\n  unicode: \"U+1F1F5 U+1F1EA\",\n  name: \"Peru\",\n  title: \"flag for Peru\",\n  dialCode: \"+51\"\n}, {\n  code: \"PF\",\n  emoji: \"ðŸ‡µðŸ‡«\",\n  unicode: \"U+1F1F5 U+1F1EB\",\n  name: \"French Polynesia\",\n  title: \"flag for French Polynesia\",\n  dialCode: \"+689\"\n}, {\n  code: \"PG\",\n  emoji: \"ðŸ‡µðŸ‡¬\",\n  unicode: \"U+1F1F5 U+1F1EC\",\n  name: \"Papua New Guinea\",\n  title: \"flag for Papua New Guinea\",\n  dialCode: \"+675\"\n}, {\n  code: \"PH\",\n  emoji: \"ðŸ‡µðŸ‡­\",\n  unicode: \"U+1F1F5 U+1F1ED\",\n  name: \"Philippines\",\n  title: \"flag for Philippines\",\n  dialCode: \"+63\"\n}, {\n  code: \"PK\",\n  emoji: \"ðŸ‡µðŸ‡°\",\n  unicode: \"U+1F1F5 U+1F1F0\",\n  name: \"Pakistan\",\n  title: \"flag for Pakistan\",\n  dialCode: \"+92\"\n}, {\n  code: \"PL\",\n  emoji: \"ðŸ‡µðŸ‡±\",\n  unicode: \"U+1F1F5 U+1F1F1\",\n  name: \"Poland\",\n  title: \"flag for Poland\",\n  dialCode: \"+48\"\n}, {\n  code: \"PM\",\n  emoji: \"ðŸ‡µðŸ‡²\",\n  unicode: \"U+1F1F5 U+1F1F2\",\n  name: \"Saint Pierre and Miquelon\",\n  title: \"flag for Saint Pierre and Miquelon\",\n  dialCode: \"+508\"\n}, {\n  code: \"PN\",\n  emoji: \"ðŸ‡µðŸ‡³\",\n  unicode: \"U+1F1F5 U+1F1F3\",\n  name: \"Pitcairn\",\n  title: \"flag for Pitcairn\",\n  dialCode: \"+872\"\n}, {\n  code: \"PR\",\n  emoji: \"ðŸ‡µðŸ‡·\",\n  unicode: \"U+1F1F5 U+1F1F7\",\n  name: \"Puerto Rico\",\n  title: \"flag for Puerto Rico\",\n  dialCode: \"+1 939\"\n}, {\n  code: \"PS\",\n  emoji: \"ðŸ‡µðŸ‡¸\",\n  unicode: \"U+1F1F5 U+1F1F8\",\n  name: \"Palestinian Territory\",\n  title: \"flag for Palestinian Territory\",\n  dialCode: \"+970\"\n}, {\n  code: \"PT\",\n  emoji: \"ðŸ‡µðŸ‡¹\",\n  unicode: \"U+1F1F5 U+1F1F9\",\n  name: \"Portugal\",\n  title: \"flag for Portugal\",\n  dialCode: \"+351\"\n}, {\n  code: \"PW\",\n  emoji: \"ðŸ‡µðŸ‡¼\",\n  unicode: \"U+1F1F5 U+1F1FC\",\n  name: \"Palau\",\n  title: \"flag for Palau\",\n  dialCode: \"+680\"\n}, {\n  code: \"PY\",\n  emoji: \"ðŸ‡µðŸ‡¾\",\n  unicode: \"U+1F1F5 U+1F1FE\",\n  name: \"Paraguay\",\n  title: \"flag for Paraguay\",\n  dialCode: \"+595\"\n}, {\n  code: \"QA\",\n  emoji: \"ðŸ‡¶ðŸ‡¦\",\n  unicode: \"U+1F1F6 U+1F1E6\",\n  name: \"Qatar\",\n  title: \"flag for Qatar\",\n  dialCode: \"+974\"\n}, {\n  code: \"RE\",\n  emoji: \"ðŸ‡·ðŸ‡ª\",\n  unicode: \"U+1F1F7 U+1F1EA\",\n  name: \"RÃ©union\",\n  title: \"flag for RÃ©union\",\n  dialCode: \"+262\"\n}, {\n  code: \"RO\",\n  emoji: \"ðŸ‡·ðŸ‡´\",\n  unicode: \"U+1F1F7 U+1F1F4\",\n  name: \"Romania\",\n  title: \"flag for Romania\",\n  dialCode: \"+40\"\n}, {\n  code: \"RS\",\n  emoji: \"ðŸ‡·ðŸ‡¸\",\n  unicode: \"U+1F1F7 U+1F1F8\",\n  name: \"Serbia\",\n  title: \"flag for Serbia\",\n  dialCode: \"+381\"\n}, {\n  code: \"RU\",\n  emoji: \"ðŸ‡·ðŸ‡º\",\n  unicode: \"U+1F1F7 U+1F1FA\",\n  name: \"Russia\",\n  title: \"flag for Russia\",\n  dialCode: \"+7\"\n}, {\n  code: \"RW\",\n  emoji: \"ðŸ‡·ðŸ‡¼\",\n  unicode: \"U+1F1F7 U+1F1FC\",\n  name: \"Rwanda\",\n  title: \"flag for Rwanda\",\n  dialCode: \"+250\"\n}, {\n  code: \"SA\",\n  emoji: \"ðŸ‡¸ðŸ‡¦\",\n  unicode: \"U+1F1F8 U+1F1E6\",\n  name: \"Saudi Arabia\",\n  title: \"flag for Saudi Arabia\",\n  dialCode: \"+966\"\n}, {\n  code: \"SB\",\n  emoji: \"ðŸ‡¸ðŸ‡§\",\n  unicode: \"U+1F1F8 U+1F1E7\",\n  name: \"Solomon Islands\",\n  title: \"flag for Solomon Islands\",\n  dialCode: \"+677\"\n}, {\n  code: \"SC\",\n  emoji: \"ðŸ‡¸ðŸ‡¨\",\n  unicode: \"U+1F1F8 U+1F1E8\",\n  name: \"Seychelles\",\n  title: \"flag for Seychelles\",\n  dialCode: \"+248\"\n}, {\n  code: \"SD\",\n  emoji: \"ðŸ‡¸ðŸ‡©\",\n  unicode: \"U+1F1F8 U+1F1E9\",\n  name: \"Sudan\",\n  title: \"flag for Sudan\",\n  dialCode: \"+249\"\n}, {\n  code: \"SE\",\n  emoji: \"ðŸ‡¸ðŸ‡ª\",\n  unicode: \"U+1F1F8 U+1F1EA\",\n  name: \"Sweden\",\n  title: \"flag for Sweden\",\n  dialCode: \"+46\"\n}, {\n  code: \"SG\",\n  emoji: \"ðŸ‡¸ðŸ‡¬\",\n  unicode: \"U+1F1F8 U+1F1EC\",\n  name: \"Singapore\",\n  title: \"flag for Singapore\",\n  dialCode: \"+65\"\n}, {\n  code: \"SH\",\n  emoji: \"ðŸ‡¸ðŸ‡­\",\n  unicode: \"U+1F1F8 U+1F1ED\",\n  name: \"Saint Helena, Ascension and Tristan Da Cunha\",\n  title: \"flag for Saint Helena, Ascension and Tristan Da Cunha\",\n  dialCode: \"+290\"\n}, {\n  code: \"SI\",\n  emoji: \"ðŸ‡¸ðŸ‡®\",\n  unicode: \"U+1F1F8 U+1F1EE\",\n  name: \"Slovenia\",\n  title: \"flag for Slovenia\",\n  dialCode: \"+386\"\n}, {\n  code: \"SJ\",\n  emoji: \"ðŸ‡¸ðŸ‡¯\",\n  unicode: \"U+1F1F8 U+1F1EF\",\n  name: \"Svalbard and Jan Mayen\",\n  title: \"flag for Svalbard and Jan Mayen\",\n  dialCode: \"+47\"\n}, {\n  code: \"SK\",\n  emoji: \"ðŸ‡¸ðŸ‡°\",\n  unicode: \"U+1F1F8 U+1F1F0\",\n  name: \"Slovakia\",\n  title: \"flag for Slovakia\",\n  dialCode: \"+421\"\n}, {\n  code: \"SL\",\n  emoji: \"ðŸ‡¸ðŸ‡±\",\n  unicode: \"U+1F1F8 U+1F1F1\",\n  name: \"Sierra Leone\",\n  title: \"flag for Sierra Leone\",\n  dialCode: \"+232\"\n}, {\n  code: \"SM\",\n  emoji: \"ðŸ‡¸ðŸ‡²\",\n  unicode: \"U+1F1F8 U+1F1F2\",\n  name: \"San Marino\",\n  title: \"flag for San Marino\",\n  dialCode: \"+378\"\n}, {\n  code: \"SN\",\n  emoji: \"ðŸ‡¸ðŸ‡³\",\n  unicode: \"U+1F1F8 U+1F1F3\",\n  name: \"Senegal\",\n  title: \"flag for Senegal\",\n  dialCode: \"+221\"\n}, {\n  code: \"SO\",\n  emoji: \"ðŸ‡¸ðŸ‡´\",\n  unicode: \"U+1F1F8 U+1F1F4\",\n  name: \"Somalia\",\n  title: \"flag for Somalia\",\n  dialCode: \"+252\"\n}, {\n  code: \"SR\",\n  emoji: \"ðŸ‡¸ðŸ‡·\",\n  unicode: \"U+1F1F8 U+1F1F7\",\n  name: \"Suriname\",\n  title: \"flag for Suriname\",\n  dialCode: \"+597\"\n}, {\n  code: \"SS\",\n  emoji: \"ðŸ‡¸ðŸ‡¸\",\n  unicode: \"U+1F1F8 U+1F1F8\",\n  name: \"South Sudan\",\n  title: \"flag for South Sudan\"\n}, {\n  code: \"ST\",\n  emoji: \"ðŸ‡¸ðŸ‡¹\",\n  unicode: \"U+1F1F8 U+1F1F9\",\n  name: \"Sao Tome and Principe\",\n  title: \"flag for Sao Tome and Principe\",\n  dialCode: \"+239\"\n}, {\n  code: \"SV\",\n  emoji: \"ðŸ‡¸ðŸ‡»\",\n  unicode: \"U+1F1F8 U+1F1FB\",\n  name: \"El Salvador\",\n  title: \"flag for El Salvador\",\n  dialCode: \"+503\"\n}, {\n  code: \"SX\",\n  emoji: \"ðŸ‡¸ðŸ‡½\",\n  unicode: \"U+1F1F8 U+1F1FD\",\n  name: \"Sint Maarten (Dutch Part)\",\n  title: \"flag for Sint Maarten (Dutch Part)\"\n}, {\n  code: \"SY\",\n  emoji: \"ðŸ‡¸ðŸ‡¾\",\n  unicode: \"U+1F1F8 U+1F1FE\",\n  name: \"Syrian Arab Republic\",\n  title: \"flag for Syrian Arab Republic\",\n  dialCode: \"+963\"\n}, {\n  code: \"SZ\",\n  emoji: \"ðŸ‡¸ðŸ‡¿\",\n  unicode: \"U+1F1F8 U+1F1FF\",\n  name: \"Swaziland\",\n  title: \"flag for Swaziland\",\n  dialCode: \"+268\"\n}, {\n  code: \"TC\",\n  emoji: \"ðŸ‡¹ðŸ‡¨\",\n  unicode: \"U+1F1F9 U+1F1E8\",\n  name: \"Turks and Caicos Islands\",\n  title: \"flag for Turks and Caicos Islands\",\n  dialCode: \"+1 649\"\n}, {\n  code: \"TD\",\n  emoji: \"ðŸ‡¹ðŸ‡©\",\n  unicode: \"U+1F1F9 U+1F1E9\",\n  name: \"Chad\",\n  title: \"flag for Chad\",\n  dialCode: \"+235\"\n}, {\n  code: \"TF\",\n  emoji: \"ðŸ‡¹ðŸ‡«\",\n  unicode: \"U+1F1F9 U+1F1EB\",\n  name: \"French Southern Territories\",\n  title: \"flag for French Southern Territories\"\n}, {\n  code: \"TG\",\n  emoji: \"ðŸ‡¹ðŸ‡¬\",\n  unicode: \"U+1F1F9 U+1F1EC\",\n  name: \"Togo\",\n  title: \"flag for Togo\",\n  dialCode: \"+228\"\n}, {\n  code: \"TH\",\n  emoji: \"ðŸ‡¹ðŸ‡­\",\n  unicode: \"U+1F1F9 U+1F1ED\",\n  name: \"Thailand\",\n  title: \"flag for Thailand\",\n  dialCode: \"+66\"\n}, {\n  code: \"TJ\",\n  emoji: \"ðŸ‡¹ðŸ‡¯\",\n  unicode: \"U+1F1F9 U+1F1EF\",\n  name: \"Tajikistan\",\n  title: \"flag for Tajikistan\",\n  dialCode: \"+992\"\n}, {\n  code: \"TK\",\n  emoji: \"ðŸ‡¹ðŸ‡°\",\n  unicode: \"U+1F1F9 U+1F1F0\",\n  name: \"Tokelau\",\n  title: \"flag for Tokelau\",\n  dialCode: \"+690\"\n}, {\n  code: \"TL\",\n  emoji: \"ðŸ‡¹ðŸ‡±\",\n  unicode: \"U+1F1F9 U+1F1F1\",\n  name: \"Timor-Leste\",\n  title: \"flag for Timor-Leste\",\n  dialCode: \"+670\"\n}, {\n  code: \"TM\",\n  emoji: \"ðŸ‡¹ðŸ‡²\",\n  unicode: \"U+1F1F9 U+1F1F2\",\n  name: \"Turkmenistan\",\n  title: \"flag for Turkmenistan\",\n  dialCode: \"+993\"\n}, {\n  code: \"TN\",\n  emoji: \"ðŸ‡¹ðŸ‡³\",\n  unicode: \"U+1F1F9 U+1F1F3\",\n  name: \"Tunisia\",\n  title: \"flag for Tunisia\",\n  dialCode: \"+216\"\n}, {\n  code: \"TO\",\n  emoji: \"ðŸ‡¹ðŸ‡´\",\n  unicode: \"U+1F1F9 U+1F1F4\",\n  name: \"Tonga\",\n  title: \"flag for Tonga\",\n  dialCode: \"+676\"\n}, {\n  code: \"TR\",\n  emoji: \"ðŸ‡¹ðŸ‡·\",\n  unicode: \"U+1F1F9 U+1F1F7\",\n  name: \"Turkey\",\n  title: \"flag for Turkey\",\n  dialCode: \"+90\"\n}, {\n  code: \"TT\",\n  emoji: \"ðŸ‡¹ðŸ‡¹\",\n  unicode: \"U+1F1F9 U+1F1F9\",\n  name: \"Trinidad and Tobago\",\n  title: \"flag for Trinidad and Tobago\",\n  dialCode: \"+1 868\"\n}, {\n  code: \"TV\",\n  emoji: \"ðŸ‡¹ðŸ‡»\",\n  unicode: \"U+1F1F9 U+1F1FB\",\n  name: \"Tuvalu\",\n  title: \"flag for Tuvalu\",\n  dialCode: \"+688\"\n}, {\n  code: \"TW\",\n  emoji: \"ðŸ‡¹ðŸ‡¼\",\n  unicode: \"U+1F1F9 U+1F1FC\",\n  name: \"Taiwan\",\n  title: \"flag for Taiwan\",\n  dialCode: \"+886\"\n}, {\n  code: \"TZ\",\n  emoji: \"ðŸ‡¹ðŸ‡¿\",\n  unicode: \"U+1F1F9 U+1F1FF\",\n  name: \"Tanzania\",\n  title: \"flag for Tanzania\",\n  dialCode: \"+255\"\n}, {\n  code: \"UA\",\n  emoji: \"ðŸ‡ºðŸ‡¦\",\n  unicode: \"U+1F1FA U+1F1E6\",\n  name: \"Ukraine\",\n  title: \"flag for Ukraine\",\n  dialCode: \"+380\"\n}, {\n  code: \"UG\",\n  emoji: \"ðŸ‡ºðŸ‡¬\",\n  unicode: \"U+1F1FA U+1F1EC\",\n  name: \"Uganda\",\n  title: \"flag for Uganda\",\n  dialCode: \"+256\"\n}, {\n  code: \"UM\",\n  emoji: \"ðŸ‡ºðŸ‡²\",\n  unicode: \"U+1F1FA U+1F1F2\",\n  name: \"United States Minor Outlying Islands\",\n  title: \"flag for United States Minor Outlying Islands\"\n}, {\n  code: \"US\",\n  emoji: \"ðŸ‡ºðŸ‡¸\",\n  unicode: \"U+1F1FA U+1F1F8\",\n  name: \"United States\",\n  title: \"flag for United States\",\n  dialCode: \"+1\"\n}, {\n  code: \"UY\",\n  emoji: \"ðŸ‡ºðŸ‡¾\",\n  unicode: \"U+1F1FA U+1F1FE\",\n  name: \"Uruguay\",\n  title: \"flag for Uruguay\",\n  dialCode: \"+598\"\n}, {\n  code: \"UZ\",\n  emoji: \"ðŸ‡ºðŸ‡¿\",\n  unicode: \"U+1F1FA U+1F1FF\",\n  name: \"Uzbekistan\",\n  title: \"flag for Uzbekistan\",\n  dialCode: \"+998\"\n}, {\n  code: \"VA\",\n  emoji: \"ðŸ‡»ðŸ‡¦\",\n  unicode: \"U+1F1FB U+1F1E6\",\n  name: \"Vatican City\",\n  title: \"flag for Vatican City\",\n  dialCode: \"+379\"\n}, {\n  code: \"VC\",\n  emoji: \"ðŸ‡»ðŸ‡¨\",\n  unicode: \"U+1F1FB U+1F1E8\",\n  name: \"Saint Vincent and The Grenadines\",\n  title: \"flag for Saint Vincent and The Grenadines\",\n  dialCode: \"+1 784\"\n}, {\n  code: \"VE\",\n  emoji: \"ðŸ‡»ðŸ‡ª\",\n  unicode: \"U+1F1FB U+1F1EA\",\n  name: \"Venezuela\",\n  title: \"flag for Venezuela\",\n  dialCode: \"+58\"\n}, {\n  code: \"VG\",\n  emoji: \"ðŸ‡»ðŸ‡¬\",\n  unicode: \"U+1F1FB U+1F1EC\",\n  name: \"Virgin Islands, British\",\n  title: \"flag for Virgin Islands, British\",\n  dialCode: \"+1 284\"\n}, {\n  code: \"VI\",\n  emoji: \"ðŸ‡»ðŸ‡®\",\n  unicode: \"U+1F1FB U+1F1EE\",\n  name: \"Virgin Islands, U.S.\",\n  title: \"flag for Virgin Islands, U.S.\",\n  dialCode: \"+1 340\"\n}, {\n  code: \"VN\",\n  emoji: \"ðŸ‡»ðŸ‡³\",\n  unicode: \"U+1F1FB U+1F1F3\",\n  name: \"Viet Nam\",\n  title: \"flag for Viet Nam\",\n  dialCode: \"+84\"\n}, {\n  code: \"VU\",\n  emoji: \"ðŸ‡»ðŸ‡º\",\n  unicode: \"U+1F1FB U+1F1FA\",\n  name: \"Vanuatu\",\n  title: \"flag for Vanuatu\",\n  dialCode: \"+678\"\n}, {\n  code: \"WF\",\n  emoji: \"ðŸ‡¼ðŸ‡«\",\n  unicode: \"U+1F1FC U+1F1EB\",\n  name: \"Wallis and Futuna\",\n  title: \"flag for Wallis and Futuna\",\n  dialCode: \"+681\"\n}, {\n  code: \"WS\",\n  emoji: \"ðŸ‡¼ðŸ‡¸\",\n  unicode: \"U+1F1FC U+1F1F8\",\n  name: \"Samoa\",\n  title: \"flag for Samoa\",\n  dialCode: \"+685\"\n}, {\n  code: \"XK\",\n  emoji: \"ðŸ‡½ðŸ‡°\",\n  unicode: \"U+1F1FD U+1F1F0\",\n  name: \"Kosovo\",\n  title: \"flag for Kosovo\",\n  dialCode: \"+383\"\n}, {\n  code: \"YE\",\n  emoji: \"ðŸ‡¾ðŸ‡ª\",\n  unicode: \"U+1F1FE U+1F1EA\",\n  name: \"Yemen\",\n  title: \"flag for Yemen\",\n  dialCode: \"+967\"\n}, {\n  code: \"YT\",\n  emoji: \"ðŸ‡¾ðŸ‡¹\",\n  unicode: \"U+1F1FE U+1F1F9\",\n  name: \"Mayotte\",\n  title: \"flag for Mayotte\",\n  dialCode: \"+262\"\n}, {\n  code: \"ZA\",\n  emoji: \"ðŸ‡¿ðŸ‡¦\",\n  unicode: \"U+1F1FF U+1F1E6\",\n  name: \"South Africa\",\n  title: \"flag for South Africa\",\n  dialCode: \"+27\"\n}, {\n  code: \"ZM\",\n  emoji: \"ðŸ‡¿ðŸ‡²\",\n  unicode: \"U+1F1FF U+1F1F2\",\n  name: \"Zambia\",\n  title: \"flag for Zambia\",\n  dialCode: \"+260\"\n}, {\n  code: \"ZW\",\n  emoji: \"ðŸ‡¿ðŸ‡¼\",\n  unicode: \"U+1F1FF U+1F1FC\",\n  name: \"Zimbabwe\",\n  title: \"flag for Zimbabwe\",\n  dialCode: \"+263\"\n}];\nclass l {\n  static createInputElement(e, o, i) {\n    e.classList.add(\"geoapify-autocomplete-input\"), e.setAttribute(\"type\", \"text\"), e.setAttribute(\"placeholder\", o.placeholder || \"Enter an address here\"), i.appendChild(e);\n  }\n  static addFeatureIcon(e, o, i) {\n    const a = {\n        unknown: \"map-marker\",\n        amenity: \"map-marker\",\n        building: \"map-marker\",\n        street: \"road\",\n        suburb: \"city\",\n        district: \"city\",\n        postcode: \"city\",\n        city: \"city\",\n        county: \"city\",\n        state: \"city\"\n      },\n      t = d.find(e => i && e.code.toLowerCase() === i.toLowerCase());\n    if (\"country\" === o && t) {\n      e.classList.add(\"emoji\");\n      const o = document.createElement(\"span\");\n      o.innerText = t.emoji, e.appendChild(o);\n    } else this.addIcon(e, a[o] ? a[o] : \"map-marker\");\n  }\n  static addIcon(e, o) {\n    const i = {\n      close: {\n        path: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\",\n        viewbox: \"0 0 24 24\"\n      },\n      \"map-marker\": {\n        path: \"M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z\",\n        viewbox: \"0 0 384 512\"\n      },\n      road: {\n        path: \"M573.19 402.67l-139.79-320C428.43 71.29 417.6 64 405.68 64h-97.59l2.45 23.16c.5 4.72-3.21 8.84-7.96 8.84h-29.16c-4.75 0-8.46-4.12-7.96-8.84L267.91 64h-97.59c-11.93 0-22.76 7.29-27.73 18.67L2.8 402.67C-6.45 423.86 8.31 448 30.54 448h196.84l10.31-97.68c.86-8.14 7.72-14.32 15.91-14.32h68.8c8.19 0 15.05 6.18 15.91 14.32L348.62 448h196.84c22.23 0 36.99-24.14 27.73-45.33zM260.4 135.16a8 8 0 0 1 7.96-7.16h39.29c4.09 0 7.53 3.09 7.96 7.16l4.6 43.58c.75 7.09-4.81 13.26-11.93 13.26h-40.54c-7.13 0-12.68-6.17-11.93-13.26l4.59-43.58zM315.64 304h-55.29c-9.5 0-16.91-8.23-15.91-17.68l5.07-48c.86-8.14 7.72-14.32 15.91-14.32h45.15c8.19 0 15.05 6.18 15.91 14.32l5.07 48c1 9.45-6.41 17.68-15.91 17.68z\",\n        viewbox: \"0 0 576 512\"\n      },\n      city: {\n        path: \"M616 192H480V24c0-13.26-10.74-24-24-24H312c-13.26 0-24 10.74-24 24v72h-64V16c0-8.84-7.16-16-16-16h-16c-8.84 0-16 7.16-16 16v80h-64V16c0-8.84-7.16-16-16-16H80c-8.84 0-16 7.16-16 16v80H24c-13.26 0-24 10.74-24 24v360c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V216c0-13.26-10.75-24-24-24zM128 404c0 6.63-5.37 12-12 12H76c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12H76c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12H76c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm128 192c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm160 96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12V76c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm160 288c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40z\",\n        viewbox: \"0 0 640 512\"\n      }\n    };\n    var a = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    a.setAttribute(\"viewBox\", i[o].viewbox), a.setAttribute(\"height\", \"24\");\n    var t = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    t.setAttribute(\"d\", i[o].path), t.setAttribute(\"fill\", \"currentColor\"), a.appendChild(t), e.appendChild(a);\n  }\n  static getStyledAddressSingleValue(e, o) {\n    let i = e;\n    const a = (i || \"\").toLowerCase().indexOf(o.toLowerCase());\n    return a >= 0 && (i = i.substring(0, a) + `<strong>${i.substring(a, a + o.length)}</strong>` + i.substring(a + o.length)), `<span class=\"main-part\">${i}</span>`;\n  }\n  static getStyledAddress(e, o) {\n    let i, a;\n    const t = e.formatted.split(\",\").map(e => e.trim());\n    if (e.name) i = t[0], a = t.slice(1).join(\", \");else {\n      const e = Math.min(2, Math.max(t.length - 2, 1));\n      i = t.slice(0, e).join(\", \"), a = t.slice(e).join(\", \");\n    }\n    if (e.nonVerifiedParts && e.nonVerifiedParts.length) e.nonVerifiedParts.forEach(o => {\n      i = i.replace(e[o], `<span class=\"non-verified\">${e[o]}</span>`);\n    });else {\n      const e = i.toLowerCase().indexOf(o.toLowerCase());\n      e >= 0 && (i = i.substring(0, e) + `<strong>${i.substring(e, e + o.length)}</strong>` + i.substring(e + o.length));\n    }\n    return `<span class=\"main-part\">${i}</span><span class=\"secondary-part\">${a}</span>`;\n  }\n  static addDropdownIcon(e, o) {\n    const i = document.createElement(\"span\");\n    i.classList.add(\"icon\"), l.addFeatureIcon(i, e.properties.result_type, e.properties.country_code), o.appendChild(i);\n  }\n  static addActiveClassToDropdownItem(e, o) {\n    for (var i = 0; i < e.length; i++) e[i].classList.remove(\"active\");\n    e[o].classList.add(\"active\");\n  }\n  static createDropdownItemText() {\n    const e = document.createElement(\"span\");\n    return e.classList.add(\"address\"), e;\n  }\n  static createDropdownItem() {\n    const e = document.createElement(\"div\");\n    return e.classList.add(\"geoapify-autocomplete-item\"), e;\n  }\n}\nclass r {\n  changeCallbacks = [];\n  suggestionsChangeCallbacks = [];\n  inputCallbacks = [];\n  openCallbacks = [];\n  closeCallbacks = [];\n  addCallback(e, o) {\n    let i = this.getCallbacksByOperation(e);\n    i && i.indexOf(o) < 0 && i.push(o);\n  }\n  removeCallback(e, o) {\n    let i = this.getCallbacksByOperation(e);\n    i && (i.indexOf(o) >= 0 ? (i.splice(i.indexOf(o), 1), this.setCallbacksByOperation(e, i)) : o || this.setCallbacksByOperation(e, []));\n  }\n  notifyInputChange(e) {\n    this.inputCallbacks.forEach(o => o(e));\n  }\n  notifyChange(e) {\n    this.changeCallbacks.forEach(o => o(e));\n  }\n  notifySuggestions(e) {\n    this.suggestionsChangeCallbacks.forEach(o => o(e));\n  }\n  notifyOpened() {\n    this.openCallbacks.forEach(e => e(!0));\n  }\n  notifyClosed() {\n    this.closeCallbacks.forEach(e => e(!1));\n  }\n  getCallbacksByOperation(e) {\n    let o = null;\n    switch (e) {\n      case \"select\":\n        o = this.changeCallbacks;\n        break;\n      case \"suggestions\":\n        o = this.suggestionsChangeCallbacks;\n        break;\n      case \"input\":\n        o = this.inputCallbacks;\n        break;\n      case \"close\":\n        o = this.closeCallbacks;\n        break;\n      case \"open\":\n        o = this.openCallbacks;\n    }\n    return o;\n  }\n  setCallbacksByOperation(e, o) {\n    switch (e) {\n      case \"select\":\n        this.changeCallbacks = o;\n        break;\n      case \"suggestions\":\n        this.suggestionsChangeCallbacks = o;\n        break;\n      case \"input\":\n        this.inputCallbacks = o;\n        break;\n      case \"close\":\n        this.closeCallbacks = o;\n        break;\n      case \"open\":\n        this.openCallbacks = o;\n    }\n  }\n}\nclass s {\n  container;\n  apiKey;\n  inputElement;\n  inputClearButton;\n  autocompleteItemsElement = null;\n  focusedItemIndex;\n  currentItems;\n  currentPromiseReject;\n  currentPlaceDetailsPromiseReject;\n  currentTimeout;\n  callbacks = new r();\n  preprocessHook;\n  postprocessHook;\n  suggestionsFilter;\n  sendGeocoderRequestAlt;\n  sendPlaceDetailsRequestAlt;\n  geocoderUrl = \"https://api.geoapify.com/v1/geocode/autocomplete\";\n  placeDetailsUrl = \"https://api.geoapify.com/v2/place-details\";\n  options = {\n    limit: 5,\n    debounceDelay: 100\n  };\n  constructor(e, o, i) {\n    this.container = e, this.apiKey = o, this.constructOptions(i), this.inputElement = document.createElement(\"input\"), l.createInputElement(this.inputElement, this.options, this.container), this.addClearButton(), this.addEventListeners();\n  }\n  setGeocoderUrl(e) {\n    this.geocoderUrl = e;\n  }\n  setPlaceDetailsUrl(e) {\n    this.placeDetailsUrl = e;\n  }\n  setType(e) {\n    this.options.type = e;\n  }\n  setLang(e) {\n    this.options.lang = e;\n  }\n  setAddDetails(e) {\n    this.options.addDetails = e;\n  }\n  setSkipIcons(e) {\n    this.options.skipIcons = e;\n  }\n  setAllowNonVerifiedHouseNumber(e) {\n    this.options.allowNonVerifiedHouseNumber = e;\n  }\n  setAllowNonVerifiedStreet(e) {\n    this.options.allowNonVerifiedStreet = e;\n  }\n  setCountryCodes(e) {\n    console.warn(\"WARNING! Obsolete function called. Function setCountryCodes() has been deprecated, please use the new addFilterByCountry() function instead!\"), this.options.countryCodes = e;\n  }\n  setPosition(e) {\n    console.warn(\"WARNING! Obsolete function called. Function setPosition() has been deprecated, please use the new addBiasByProximity() function instead!\"), this.options.position = e;\n  }\n  setLimit(e) {\n    this.options.limit = e;\n  }\n  setValue(e) {\n    e ? this.inputClearButton.classList.add(\"visible\") : this.inputClearButton.classList.remove(\"visible\"), this.inputElement.value = e;\n  }\n  getValue() {\n    return this.inputElement.value;\n  }\n  addFilterByCountry(o) {\n    this.options.filter[e] = o;\n  }\n  addFilterByCircle(e) {\n    this.options.filter[i] = e;\n  }\n  addFilterByRect(e) {\n    this.options.filter[o] = e;\n  }\n  addFilterByPlace(e) {\n    this.options.filter[t] = e;\n  }\n  clearFilters() {\n    this.options.filter = {};\n  }\n  addBiasByCountry(o) {\n    this.options.bias[e] = o;\n  }\n  addBiasByCircle(e) {\n    this.options.bias[i] = e;\n  }\n  addBiasByRect(e) {\n    this.options.bias[o] = e;\n  }\n  addBiasByProximity(e) {\n    this.options.bias[a] = e;\n  }\n  clearBias() {\n    this.options.bias = {};\n  }\n  on(e, o) {\n    this.callbacks.addCallback(e, o);\n  }\n  off(e, o) {\n    this.callbacks.removeCallback(e, o);\n  }\n  once(e, o) {\n    this.on(e, o);\n    const i = this,\n      a = () => {\n        i.off(e, o), i.off(e, a);\n      };\n    this.on(e, a);\n  }\n  setSuggestionsFilter(e) {\n    this.suggestionsFilter = n.returnIfFunction(e);\n  }\n  setPreprocessHook(e) {\n    this.preprocessHook = n.returnIfFunction(e);\n  }\n  setPostprocessHook(e) {\n    this.postprocessHook = n.returnIfFunction(e);\n  }\n  setSendGeocoderRequestFunc(e) {\n    this.sendGeocoderRequestAlt = n.returnIfFunction(e);\n  }\n  setSendPlaceDetailsRequestFunc(e) {\n    this.sendPlaceDetailsRequestAlt = n.returnIfFunction(e);\n  }\n  isOpen() {\n    return !!this.autocompleteItemsElement;\n  }\n  close() {\n    this.closeDropDownList();\n  }\n  open() {\n    this.isOpen() || this.openDropdownAgain();\n  }\n  sendGeocoderRequestOrAlt(e) {\n    return this.sendGeocoderRequestAlt ? this.sendGeocoderRequestAlt(e, this) : this.sendGeocoderRequest(e);\n  }\n  sendGeocoderRequest(e) {\n    return new Promise((o, i) => {\n      this.currentPromiseReject = i;\n      let a = n.generateUrl(e, this.geocoderUrl, this.apiKey, this.options);\n      fetch(a).then(e => {\n        e.ok ? e.json().then(e => o(e)) : e.json().then(e => i(e));\n      });\n    });\n  }\n  sendPlaceDetailsRequest(e) {\n    return new Promise((o, i) => {\n      if (n.isNotOpenStreetMapData(e)) return void o(e);\n      this.currentPlaceDetailsPromiseReject = i;\n      let a = n.generatePlacesUrl(this.placeDetailsUrl, e.properties.place_id, this.apiKey, this.options);\n      fetch(a).then(a => {\n        a.ok ? a.json().then(i => {\n          i.features.length || o(e), o(i.features[0]);\n        }) : a.json().then(e => i(e));\n      });\n    });\n  }\n  onUserInput(e) {\n    let o = this.inputElement.value,\n      i = this.inputElement.value;\n    if (this.callbacks.notifyInputChange(o), this.closeDropDownList(), this.focusedItemIndex = -1, this.cancelPreviousRequest(), this.cancelPreviousTimeout(), !o) return this.removeClearButton(), !1;\n    this.showClearButton(), this.currentTimeout = window.setTimeout(() => {\n      n.returnIfFunction(this.preprocessHook) && (o = this.preprocessHook(o)), this.sendGeocoderRequestOrAlt(o).then(o => {\n        this.onDropdownDataLoad(o, i, e);\n      }, e => {\n        e.canceled || console.log(e);\n      });\n    }, this.options.debounceDelay);\n  }\n  onDropdownDataLoad(e, o, i) {\n    n.needToCalculateExtendByNonVerifiedValues(e, this.options) && n.extendByNonVerifiedValues(this.options, e.features, e?.query?.parsed), this.currentItems = e.features, n.needToFilterDataBySuggestionsFilter(this.currentItems, this.suggestionsFilter) && (this.currentItems = this.suggestionsFilter(this.currentItems)), this.callbacks.notifySuggestions(this.currentItems), this.currentItems.length && (this.createDropdown(), this.currentItems.forEach((e, a) => {\n      this.populateDropdownItem(e, o, i, a);\n    }));\n  }\n  populateDropdownItem(e, o, i, a) {\n    const t = l.createDropdownItem();\n    this.options.skipIcons || l.addDropdownIcon(e, t);\n    const d = l.createDropdownItemText();\n    if (n.returnIfFunction(this.postprocessHook)) {\n      const i = this.postprocessHook(e);\n      d.innerHTML = l.getStyledAddressSingleValue(i, o);\n    } else d.innerHTML = l.getStyledAddress(e.properties, o);\n    t.appendChild(d), this.addEventListenerOnDropdownClick(t, i, a), this.autocompleteItemsElement.appendChild(t);\n  }\n  addEventListenerOnDropdownClick(e, o, i) {\n    e.addEventListener(\"click\", e => {\n      o.stopPropagation(), this.setValueAndNotify(this.currentItems[i]);\n    });\n  }\n  createDropdown() {\n    this.autocompleteItemsElement = document.createElement(\"div\"), this.autocompleteItemsElement.setAttribute(\"class\", \"geoapify-autocomplete-items\"), this.callbacks.notifyOpened(), this.container.appendChild(this.autocompleteItemsElement);\n  }\n  cancelPreviousTimeout() {\n    this.currentTimeout && (window.clearTimeout(this.currentTimeout), this.currentTimeout = null);\n  }\n  cancelPreviousRequest() {\n    this.currentPromiseReject && (this.currentPromiseReject({\n      canceled: !0\n    }), this.currentPromiseReject = null);\n  }\n  addEventListeners() {\n    this.inputElement.addEventListener(\"input\", this.onUserInput.bind(this), !1), this.inputElement.addEventListener(\"keydown\", this.onUserKeyPress.bind(this), !1), document.addEventListener(\"click\", e => {\n      e.target !== this.inputElement ? this.closeDropDownList() : this.autocompleteItemsElement || this.openDropdownAgain();\n    });\n  }\n  showClearButton() {\n    this.inputClearButton.classList.add(\"visible\");\n  }\n  removeClearButton() {\n    this.inputClearButton.classList.remove(\"visible\");\n  }\n  onUserKeyPress(e) {\n    if (this.autocompleteItemsElement) {\n      const o = this.autocompleteItemsElement.getElementsByTagName(\"div\");\n      \"ArrowDown\" === e.code ? this.handleArrowDownEvent(e, o) : \"ArrowUp\" === e.code ? this.handleArrowUpEvent(e, o) : \"Enter\" === e.code ? this.handleEnterEvent(e) : \"Escape\" === e.code && this.closeDropDownList();\n    } else \"ArrowDown\" == e.code && this.openDropdownAgain();\n  }\n  handleEnterEvent(e) {\n    e.preventDefault(), this.focusedItemIndex > -1 && (this.options.skipSelectionOnArrowKey ? this.setValueAndNotify(this.currentItems[this.focusedItemIndex]) : this.closeDropDownList());\n  }\n  handleArrowUpEvent(e, o) {\n    e.preventDefault(), this.focusedItemIndex--, this.focusedItemIndex < 0 && (this.focusedItemIndex = o.length - 1), this.setActive(o, this.focusedItemIndex);\n  }\n  handleArrowDownEvent(e, o) {\n    e.preventDefault(), this.focusedItemIndex++, this.focusedItemIndex >= o.length && (this.focusedItemIndex = 0), this.setActive(o, this.focusedItemIndex);\n  }\n  setActive(e, o) {\n    if (!e || !e.length) return !1;\n    l.addActiveClassToDropdownItem(e, o), this.options.skipSelectionOnArrowKey || (this.inputElement.value = n.returnIfFunction(this.postprocessHook) ? this.postprocessHook(this.currentItems[o]) : this.currentItems[o].properties.formatted, this.notifyValueSelected(this.currentItems[o]));\n  }\n  setValueAndNotify(e) {\n    this.inputElement.value = n.returnIfFunction(this.postprocessHook) ? this.postprocessHook(e) : e.properties.formatted, this.notifyValueSelected(e), this.closeDropDownList();\n  }\n  clearFieldAndNotify(e) {\n    e.stopPropagation(), this.inputElement.value = \"\", this.removeClearButton(), this.cancelPreviousRequest(), this.cancelPreviousTimeout(), this.closeDropDownList(), this.notifyValueSelected(null);\n  }\n  closeDropDownList() {\n    this.autocompleteItemsElement && (this.container.removeChild(this.autocompleteItemsElement), this.autocompleteItemsElement = null, this.callbacks.notifyClosed());\n  }\n  notifyValueSelected(e) {\n    this.cancelPreviousPlaceDetailsRequest(), this.noNeedToRequestPlaceDetails(e) ? this.callbacks.notifyChange(e) : this.sendPlaceDetailsRequestOrAlt(e).then(e => {\n      this.callbacks.notifyChange(e), this.currentPlaceDetailsPromiseReject = null;\n    }, o => {\n      o.canceled || (console.log(o), this.callbacks.notifyChange(e), this.currentPlaceDetailsPromiseReject = null);\n    });\n  }\n  sendPlaceDetailsRequestOrAlt(e) {\n    return this.sendPlaceDetailsRequestAlt ? this.sendPlaceDetailsRequestAlt(e, this) : this.sendPlaceDetailsRequest(e);\n  }\n  noNeedToRequestPlaceDetails(e) {\n    return !this.options.addDetails || !e || e.properties.nonVerifiedParts?.length;\n  }\n  cancelPreviousPlaceDetailsRequest() {\n    this.currentPlaceDetailsPromiseReject && (this.currentPlaceDetailsPromiseReject({\n      canceled: !0\n    }), this.currentPlaceDetailsPromiseReject = null);\n  }\n  openDropdownAgain() {\n    const e = document.createEvent(\"Event\");\n    e.initEvent(\"input\", !0, !0), this.inputElement.dispatchEvent(e);\n  }\n  constructOptions(e) {\n    this.options = e ? {\n      ...this.options,\n      ...e\n    } : this.options, this.options.filter = this.options.filter || {}, this.options.bias = this.options.bias || {}, this.options.countryCodes && this.addFilterByCountry(this.options.countryCodes), this.options.position && this.addBiasByProximity(this.options.position);\n  }\n  addClearButton() {\n    this.inputClearButton = document.createElement(\"div\"), this.inputClearButton.classList.add(\"geoapify-close-button\"), l.addIcon(this.inputClearButton, \"close\"), this.inputClearButton.addEventListener(\"click\", this.clearFieldAndNotify.bind(this), !1), this.container.appendChild(this.inputClearButton);\n  }\n}\nexport { s as GeocoderAutocomplete };","map":{"version":3,"names":["e","o","i","a","t","n","isLatitude","isFinite","Math","abs","isLongitude","isNotOpenStreetMapData","properties","datasource","sourcename","place_id","extendByNonVerifiedValues","forEach","housenumber","allowNonVerifiedHouseNumber","rank","match_type","addHouseNumberToFormatted","nonVerifiedParts","street","allowNonVerifiedStreet","replace","toUpperCase","address_line1","address_line2","formatted","Object","keys","find","indexOf","country_code","generatePlacesUrl","lang","needToFilterDataBySuggestionsFilter","length","needToCalculateExtendByNonVerifiedValues","features","query","parsed","generateUrl","d","l","r","s","c","encodeURIComponent","type","limit","F","m","filter","u","f","U","push","join","toLowerCase","lat","lon","radiusMeters","lat1","lon1","lat2","lon2","g","h","bias","C","p","E","returnIfFunction","code","emoji","unicode","name","title","dialCode","createInputElement","classList","add","setAttribute","placeholder","appendChild","addFeatureIcon","unknown","amenity","building","suburb","district","postcode","city","county","state","document","createElement","innerText","addIcon","close","path","viewbox","road","createElementNS","getStyledAddressSingleValue","substring","getStyledAddress","split","map","trim","slice","min","max","addDropdownIcon","result_type","addActiveClassToDropdownItem","remove","createDropdownItemText","createDropdownItem","changeCallbacks","suggestionsChangeCallbacks","inputCallbacks","openCallbacks","closeCallbacks","addCallback","getCallbacksByOperation","removeCallback","splice","setCallbacksByOperation","notifyInputChange","notifyChange","notifySuggestions","notifyOpened","notifyClosed","container","apiKey","inputElement","inputClearButton","autocompleteItemsElement","focusedItemIndex","currentItems","currentPromiseReject","currentPlaceDetailsPromiseReject","currentTimeout","callbacks","preprocessHook","postprocessHook","suggestionsFilter","sendGeocoderRequestAlt","sendPlaceDetailsRequestAlt","geocoderUrl","placeDetailsUrl","options","debounceDelay","constructor","constructOptions","addClearButton","addEventListeners","setGeocoderUrl","setPlaceDetailsUrl","setType","setLang","setAddDetails","addDetails","setSkipIcons","skipIcons","setAllowNonVerifiedHouseNumber","setAllowNonVerifiedStreet","setCountryCodes","console","warn","countryCodes","setPosition","position","setLimit","setValue","value","getValue","addFilterByCountry","addFilterByCircle","addFilterByRect","addFilterByPlace","clearFilters","addBiasByCountry","addBiasByCircle","addBiasByRect","addBiasByProximity","clearBias","on","off","once","currentListener","setSuggestionsFilter","setPreprocessHook","setPostprocessHook","setSendGeocoderRequestFunc","setSendPlaceDetailsRequestFunc","isOpen","closeDropDownList","open","openDropdownAgain","sendGeocoderRequestOrAlt","sendGeocoderRequest","Promise","fetch","then","ok","json","sendPlaceDetailsRequest","onUserInput","cancelPreviousRequest","cancelPreviousTimeout","removeClearButton","showClearButton","window","setTimeout","onDropdownDataLoad","canceled","log","createDropdown","populateDropdownItem","innerHTML","addEventListenerOnDropdownClick","addEventListener","stopPropagation","setValueAndNotify","clearTimeout","bind","onUserKeyPress","target","getElementsByTagName","handleArrowDownEvent","handleArrowUpEvent","handleEnterEvent","preventDefault","skipSelectionOnArrowKey","setActive","notifyValueSelected","clearFieldAndNotify","removeChild","cancelPreviousPlaceDetailsRequest","noNeedToRequestPlaceDetails","sendPlaceDetailsRequestOrAlt","createEvent","initEvent","dispatchEvent","GeocoderAutocomplete"],"sources":["C:\\Users\\Pavel\\Desktop\\service_platform\\frontend\\node_modules\\@geoapify\\geocoder-autocomplete\\src\\helpers\\constants.ts","C:\\Users\\Pavel\\Desktop\\service_platform\\frontend\\node_modules\\@geoapify\\geocoder-autocomplete\\src\\helpers\\calculation.helper.ts","C:\\Users\\Pavel\\Desktop\\service_platform\\frontend\\node_modules\\@geoapify\\geocoder-autocomplete\\src\\helpers\\dom.helper.ts","C:\\Users\\Pavel\\Desktop\\service_platform\\frontend\\node_modules\\@geoapify\\geocoder-autocomplete\\src\\helpers\\callbacks.ts","C:\\Users\\Pavel\\Desktop\\service_platform\\frontend\\node_modules\\@geoapify\\geocoder-autocomplete\\src\\autocomplete.ts"],"sourcesContent":["export const BY_COUNTRYCODE = 'countrycode';\nexport const BY_RECT = 'rect';\nexport const BY_CIRCLE = 'circle';\nexport const BY_PROXIMITY = 'proximity';\nexport const BY_PLACE = 'place';\n","import {\n    ByCircleOptions,\n    ByCountryCodeOptions,\n    ByProximityOptions,\n    ByRectOptions,\n    GeocoderAutocompleteOptions\n} from \"../autocomplete\";\nimport { BY_CIRCLE, BY_COUNTRYCODE, BY_PLACE, BY_PROXIMITY, BY_RECT } from \"./constants\";\n\nexport class CalculationHelper {\n    public static isLatitude(num: any) {\n        return num !== '' && num !== null && isFinite(num) && Math.abs(num) <= 90;\n    }\n\n    public static isLongitude(num: any) {\n        return num !== '' && num !== null && isFinite(num) && Math.abs(num) <= 180;\n    }\n\n    public static isNotOpenStreetMapData(feature: any) {\n        return feature.properties.datasource?.sourcename !== 'openstreetmap' || !feature.properties.place_id;\n    }\n\n    public static extendByNonVerifiedValues(options: GeocoderAutocompleteOptions, features: any, parsedAddress: any) {\n        features.forEach((feature: any) => {\n            if (parsedAddress.housenumber &&\n                options.allowNonVerifiedHouseNumber && feature.properties.rank.match_type === \"match_by_street\") {\n                // add housenumber\n                this.addHouseNumberToFormatted(feature.properties, null, parsedAddress.housenumber)\n                feature.properties.nonVerifiedParts = [\"housenumber\"];\n            } else if (parsedAddress.street && parsedAddress.housenumber &&\n                options.allowNonVerifiedStreet &&\n                (feature.properties.rank.match_type === \"match_by_city_or_disrict\" || feature.properties.rank.match_type === \"match_by_postcode\")) {\n                // add housenumber and street\n                this.addHouseNumberToFormatted(feature.properties, parsedAddress.street, parsedAddress.housenumber)\n                feature.properties.nonVerifiedParts = [\"housenumber\", \"street\"];\n            } else if (parsedAddress.street &&\n                options.allowNonVerifiedStreet &&\n                (feature.properties.rank.match_type === \"match_by_city_or_disrict\" || feature.properties.rank.match_type === \"match_by_postcode\")) {\n                // add street\n                feature.properties.street = parsedAddress.street.replace(/(^\\w|\\s\\w|[-]\\w)/g, (m: string) => m.toUpperCase());\n\n                feature.properties.address_line1 = feature.properties.street;\n                feature.properties.address_line2 = feature.properties.formatted;\n\n                feature.properties.formatted = feature.properties.street + \", \" + feature.properties.formatted;\n                feature.properties.nonVerifiedParts = [\"street\"];\n            }\n        });\n    }\n\n    private static addHouseNumberToFormatted(featureProperties: any, street: string, housenumber: string) {\n        const houseNumberAndStreetFormatsPerCountry: { [key: string]: string[] } = {\n            \"{{{road}}} {{{house_number}}}\": [\"af\", \"ai\", \"al\", \"ao\", \"ar\", \"at\", \"aw\", \"ax\", \"ba\", \"be\", \"bg\", \"bi\", \"bo\", \"bq\", \"br\", \"bs\", \"bt\", \"bv\", \"bw\", \"cf\", \"ch\", \"cl\", \"cm\", \"co\", \"cr\", \"cu\", \"cv\", \"cw\", \"cy\", \"cz\", \"de\", \"dk\", \"do\", \"ec\", \"ee\", \"eh\", \"er\", \"et\", \"fi\", \"fo\", \"gd\", \"ge\", \"gl\", \"gq\", \"gr\", \"gt\", \"gw\", \"hn\", \"hr\", \"ht\", \"hu\", \"id\", \"il\", \"ir\", \"is\", \"jo\", \"ki\", \"km\", \"kp\", \"kw\", \"lc\", \"li\", \"lr\", \"lt\", \"lv\", \"ly\", \"me\", \"mk\", \"ml\", \"mn\", \"mo\", \"mx\", \"ni\", \"nl\", \"no\", \"np\", \"pa\", \"pe\", \"pl\", \"ps\", \"pt\", \"pw\", \"py\", \"qa\", \"ro\", \"rs\", \"ru\", \"sb\", \"sd\", \"se\", \"si\", \"sj\", \"sk\", \"so\", \"sr\", \"ss\", \"st\", \"sv\", \"sx\", \"sz\", \"td\", \"tj\", \"tl\", \"tr\", \"um\", \"uz\", \"uy\", \"vc\", \"ve\", \"vu\", \"ws\"],\n            \"{{{house_number}}} {{{road}}}\": [\"ad\", \"ae\", \"ag\", \"am\", \"as\", \"au\", \"az\", \"bb\", \"bd\", \"bf\", \"bh\", \"bl\", \"bm\", \"bz\", \"ca\", \"cc\", \"ci\", \"ck\", \"cn\", \"cx\", \"dj\", \"dm\", \"dz\", \"eg\", \"fj\", \"fk\", \"fm\", \"fr\", \"ga\", \"gb\", \"gf\", \"gg\", \"gh\", \"gi\", \"gm\", \"gn\", \"gp\", \"gs\", \"gu\", \"gy\", \"hk\", \"hm\", \"ie\", \"im\", \"io\", \"iq\", \"je\", \"jm\", \"jp\", \"ke\", \"kh\", \"kn\", \"kr\", \"ky\", \"lb\", \"lk\", \"ls\", \"lu\", \"ma\", \"mc\", \"mf\", \"mh\", \"mg\", \"mm\", \"mp\", \"ms\", \"mt\", \"mq\", \"mv\", \"mw\", \"my\", \"na\", \"nc\", \"ne\", \"nf\", \"ng\", \"nr\", \"nu\", \"nz\", \"om\", \"pf\", \"pg\", \"ph\", \"pk\", \"pm\", \"pr\", \"re\", \"rw\", \"sa\", \"sc\", \"sg\", \"sh\", \"sl\", \"sn\", \"tc\", \"tf\", \"th\", \"tk\", \"tn\", \"to\", \"tt\", \"tv\", \"tw\", \"tz\", \"ug\", \"us\", \"vg\", \"vi\", \"wf\", \"yt\", \"za\", \"zm\", \"zw\"],\n            \"{{{road}}}, {{{house_number}}}\": [\"by\", \"es\", \"it\", \"kg\", \"kz\", \"md\", \"mz\", \"sm\", \"sy\", \"ua\", \"va\"],\n            \"{{{house_number}}}, {{{road}}}\": [\"bj\", \"bn\", \"cd\", \"cg\", \"in\", \"la\", \"mr\", \"mu\", \"tg\", \"tm\", \"vn\", \"ye\"]\n        }\n\n        const format = Object.keys(houseNumberAndStreetFormatsPerCountry).find(key => houseNumberAndStreetFormatsPerCountry[key].indexOf(featureProperties.country_code) >= 0) || \"{{{road}}} {{{house_number}}}\";\n\n        if (street) {\n            // add street and housenumber\n            featureProperties.street = street.replace(/(^\\w|\\s\\w|[-]\\w)/g, m => m.toUpperCase());\n\n            featureProperties.housenumber = housenumber;\n            const addressPart = format.replace(\"{{{road}}}\", featureProperties.street).replace(\"{{{house_number}}}\", housenumber);\n            featureProperties.address_line1 = addressPart;\n            featureProperties.address_line2 = featureProperties.formatted;\n\n            featureProperties.formatted = addressPart + \", \" + featureProperties.formatted;\n        } else {\n            // add house number only\n            featureProperties.housenumber = housenumber;\n            const addressPart = format.replace(\"{{{road}}}\", featureProperties.street).replace(\"{{{house_number}}}\", housenumber);\n\n            featureProperties.address_line1 = featureProperties.address_line1.replace(featureProperties.street, addressPart);;\n            featureProperties.formatted = featureProperties.formatted.replace(featureProperties.street, addressPart);\n        }\n    }\n\n    public static generatePlacesUrl(placeDetailsUrl: string,\n                                    placeId: string,\n                                    apiKey: string,\n                                    options: GeocoderAutocompleteOptions): string {\n        let url = `${placeDetailsUrl}?id=${placeId}&apiKey=${apiKey}`;\n        if (options.lang) {\n            url += `&lang=${options.lang}`;\n        }\n        return url;\n    }\n\n    public static needToFilterDataBySuggestionsFilter(currentItems: any, suggestionsFilter?: (suggetions: any[]) => any[]) {\n        return currentItems && currentItems.length && suggestionsFilter && typeof suggestionsFilter === 'function';\n    }\n\n    public static needToCalculateExtendByNonVerifiedValues(data: any,\n                                                           options: GeocoderAutocompleteOptions) {\n        return data.features && data.features.length &&\n            data?.query?.parsed &&\n            (options.allowNonVerifiedHouseNumber || options.allowNonVerifiedStreet);\n    }\n\n    public static generateUrl(value: string,\n                              geocoderUrl: string,\n                              apiKey: string,\n                              options: GeocoderAutocompleteOptions): string {\n        let url = `${geocoderUrl}?text=${encodeURIComponent(value)}&apiKey=${apiKey}`;\n        // Add type of the location if set. Learn more about possible parameters on https://apidocs.geoapify.com/docs/geocoding/api/api\n        if (options.type) {\n            url += `&type=${options.type}`;\n        }\n\n        if (options.limit) {\n            url += `&limit=${options.limit}`;\n        }\n\n        if (options.lang) {\n            url += `&lang=${options.lang}`;\n        }\n\n        const filters = [];\n        const filterByCountryCodes: ByCountryCodeOptions = options.filter[BY_COUNTRYCODE] as ByCountryCodeOptions;\n        const filterByCircle: ByCircleOptions = options.filter[BY_CIRCLE] as ByCircleOptions;\n        const filterByRect: ByRectOptions = options.filter[BY_RECT] as ByRectOptions;\n        const filterByPlace: string = options.filter[BY_PLACE] as string;\n\n        if (filterByCountryCodes && filterByCountryCodes.length) {\n            filters.push(`countrycode:${filterByCountryCodes.join(',').toLowerCase()}`);\n        }\n\n        if (filterByCircle && CalculationHelper.isLatitude(filterByCircle.lat) && CalculationHelper.isLongitude(filterByCircle.lon) && filterByCircle.radiusMeters > 0) {\n            filters.push(`circle:${filterByCircle.lon},${filterByCircle.lat},${filterByCircle.radiusMeters}`);\n        }\n\n        if (filterByRect && CalculationHelper.isLatitude(filterByRect.lat1) && CalculationHelper.isLongitude(filterByRect.lon1) && CalculationHelper.isLatitude(filterByRect.lat2) && CalculationHelper.isLongitude(filterByRect.lon2)) {\n            filters.push(`rect:${filterByRect.lon1},${filterByRect.lat1},${filterByRect.lon2},${filterByRect.lat2}`);\n        }\n\n        if (filterByPlace) {\n            filters.push(`place:${filterByPlace}`);\n        }\n\n\n        url += filters.length ? `&filter=${filters.join('|')}` : '';\n\n        const bias = [];\n        const biasByCountryCodes: ByCountryCodeOptions = options.bias[BY_COUNTRYCODE] as ByCountryCodeOptions;\n        const biasByCircle: ByCircleOptions = options.bias[BY_CIRCLE] as ByCircleOptions;\n        const biasByRect: ByRectOptions = options.bias[BY_RECT] as ByRectOptions;\n        const biasByProximity: ByProximityOptions = options.bias[BY_PROXIMITY] as ByProximityOptions;\n\n        if (biasByCountryCodes && biasByCountryCodes.length) {\n            bias.push(`countrycode:${biasByCountryCodes.join(',').toLowerCase()}`);\n        }\n\n        if (biasByCircle && CalculationHelper.isLatitude(biasByCircle.lat) && CalculationHelper.isLongitude(biasByCircle.lon) && biasByCircle.radiusMeters > 0) {\n            bias.push(`circle:${biasByCircle.lon},${biasByCircle.lat},${biasByCircle.radiusMeters}`);\n        }\n\n        if (biasByRect && CalculationHelper.isLatitude(biasByRect.lat1) && CalculationHelper.isLongitude(biasByRect.lon1) && CalculationHelper.isLatitude(biasByRect.lat2) && CalculationHelper.isLongitude(biasByRect.lon2)) {\n            bias.push(`rect:${biasByRect.lon1},${biasByRect.lat1},${biasByRect.lon2},${biasByRect.lat2}`);\n        }\n\n        if (biasByProximity && CalculationHelper.isLatitude(biasByProximity.lat) && CalculationHelper.isLongitude(biasByProximity.lon)) {\n            bias.push(`proximity:${biasByProximity.lon},${biasByProximity.lat}`);\n        }\n\n        url += bias.length ? `&bias=${bias.join('|')}` : '';\n\n        return url;\n    }\n\n    public static returnIfFunction(func: any) {\n        if(func && typeof func === 'function') {\n            return func;\n        } else {\n            return null;\n        }\n    }\n}","import { GeocoderAutocompleteOptions } from \"../autocomplete\";\nimport countiesData from \"../countries.json\";\n\nexport class DomHelper {\n    public static createInputElement(inputElement: HTMLInputElement,\n                                      options: GeocoderAutocompleteOptions,\n                                      container: HTMLElement) {\n        inputElement.classList.add(\"geoapify-autocomplete-input\");\n        inputElement.setAttribute(\"type\", \"text\");\n        inputElement.setAttribute(\"placeholder\", options.placeholder || \"Enter an address here\");\n        container.appendChild(inputElement);\n    }\n\n    public static addFeatureIcon(element: HTMLElement, type: string, countryCode: string) {\n        const iconMap: any = {\n            'unknown': 'map-marker',\n            'amenity': 'map-marker',\n            'building': 'map-marker',\n            'street': 'road',\n            'suburb': 'city',\n            'district': 'city',\n            'postcode': 'city',\n            'city': 'city',\n            'county': 'city',\n            'state': 'city'\n        };\n\n        const countryData = countiesData.find(county => countryCode && county.code.toLowerCase() === countryCode.toLowerCase());\n\n        if ((type === 'country') && countryData) {\n            element.classList.add(\"emoji\");\n            const emojiElement = document.createElement('span');\n            emojiElement.innerText = countryData.emoji;\n            element.appendChild(emojiElement);\n        } else if (iconMap[type]) {\n            this.addIcon(element, iconMap[type])\n        } else {\n            this.addIcon(element, 'map-marker');\n        }\n    }\n\n    public static addIcon(element: HTMLElement, icon: string) {\n\n        //FortAwesome icons 5. Licence - https://fontawesome.com/license/free\n\n        const icons: { [key: string]: any } = {\n            \"close\": {\n                path: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\",\n                viewbox: \"0 0 24 24\"\n            },\n            \"map-marker\": {\n                path: \"M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z\",\n                viewbox: \"0 0 384 512\"\n            },\n            \"road\": {\n                path: \"M573.19 402.67l-139.79-320C428.43 71.29 417.6 64 405.68 64h-97.59l2.45 23.16c.5 4.72-3.21 8.84-7.96 8.84h-29.16c-4.75 0-8.46-4.12-7.96-8.84L267.91 64h-97.59c-11.93 0-22.76 7.29-27.73 18.67L2.8 402.67C-6.45 423.86 8.31 448 30.54 448h196.84l10.31-97.68c.86-8.14 7.72-14.32 15.91-14.32h68.8c8.19 0 15.05 6.18 15.91 14.32L348.62 448h196.84c22.23 0 36.99-24.14 27.73-45.33zM260.4 135.16a8 8 0 0 1 7.96-7.16h39.29c4.09 0 7.53 3.09 7.96 7.16l4.6 43.58c.75 7.09-4.81 13.26-11.93 13.26h-40.54c-7.13 0-12.68-6.17-11.93-13.26l4.59-43.58zM315.64 304h-55.29c-9.5 0-16.91-8.23-15.91-17.68l5.07-48c.86-8.14 7.72-14.32 15.91-14.32h45.15c8.19 0 15.05 6.18 15.91 14.32l5.07 48c1 9.45-6.41 17.68-15.91 17.68z\",\n                viewbox: \"0 0 576 512\"\n            },\n            \"city\": {\n                path: \"M616 192H480V24c0-13.26-10.74-24-24-24H312c-13.26 0-24 10.74-24 24v72h-64V16c0-8.84-7.16-16-16-16h-16c-8.84 0-16 7.16-16 16v80h-64V16c0-8.84-7.16-16-16-16H80c-8.84 0-16 7.16-16 16v80H24c-13.26 0-24 10.74-24 24v360c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V216c0-13.26-10.75-24-24-24zM128 404c0 6.63-5.37 12-12 12H76c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12H76c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12H76c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm128 192c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm160 96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12V76c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm160 288c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40z\",\n                viewbox: \"0 0 640 512\"\n            }\n        }\n\n        var svgElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'svg');\n        svgElement.setAttribute('viewBox', icons[icon].viewbox);\n        svgElement.setAttribute('height', \"24\");\n\n        var iconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'path');\n        iconElement.setAttribute(\"d\", icons[icon].path);\n        iconElement.setAttribute('fill', 'currentColor');\n        svgElement.appendChild(iconElement);\n        element.appendChild(svgElement);\n    }\n\n    public static  getStyledAddressSingleValue(value: string, currentValue: string): string {\n        let displayValue = value;\n\n        const valueIndex = (displayValue || '').toLowerCase().indexOf(currentValue.toLowerCase());\n        if (valueIndex >= 0) {\n            displayValue = displayValue.substring(0, valueIndex) +\n                `<strong>${displayValue.substring(valueIndex, valueIndex + currentValue.length)}</strong>` +\n                displayValue.substring(valueIndex + currentValue.length);\n        }\n\n        return `<span class=\"main-part\">${displayValue}</span>`\n    }\n\n    public static getStyledAddress(featureProperties: any, currentValue: string): string {\n        let mainPart: string;\n        let secondaryPart: string;\n        const parts = featureProperties.formatted.split(',').map((part: string) => part.trim());\n\n        if (featureProperties.name) {\n            mainPart = parts[0];\n            secondaryPart = parts.slice(1).join(', ');\n        } else {\n            const mainElements = Math.min(2, Math.max(parts.length - 2, 1));\n            mainPart = parts.slice(0, mainElements).join(', ');\n            secondaryPart = parts.slice(mainElements).join(', ');\n        }\n\n        if (featureProperties.nonVerifiedParts && featureProperties.nonVerifiedParts.length) {\n            featureProperties.nonVerifiedParts.forEach((part: string) => {\n                mainPart = mainPart.replace(featureProperties[part], `<span class=\"non-verified\">${featureProperties[part]}</span>`);\n            });\n        } else {\n            const valueIndex = mainPart.toLowerCase().indexOf(currentValue.toLowerCase());\n            if (valueIndex >= 0) {\n                mainPart = mainPart.substring(0, valueIndex) +\n                    `<strong>${mainPart.substring(valueIndex, valueIndex + currentValue.length)}</strong>` +\n                    mainPart.substring(valueIndex + currentValue.length);\n\n            }\n        }\n\n        return `<span class=\"main-part\">${mainPart}</span><span class=\"secondary-part\">${secondaryPart}</span>`\n    }\n\n    public static addDropdownIcon(feature: any, itemElement: HTMLDivElement) {\n        const iconElement = document.createElement(\"span\");\n        iconElement.classList.add('icon');\n\n        DomHelper.addFeatureIcon(iconElement, feature.properties.result_type, feature.properties.country_code);\n\n        itemElement.appendChild(iconElement);\n    }\n\n    public static addActiveClassToDropdownItem(items: HTMLCollectionOf<HTMLDivElement>, index: number) {\n        for (var i = 0; i < items.length; i++) {\n            items[i].classList.remove(\"active\");\n        }\n\n        /* Add class \"autocomplete-active\" to the active element*/\n        items[index].classList.add(\"active\");\n    }\n\n    public static createDropdownItemText() {\n        const textElement = document.createElement(\"span\");\n        textElement.classList.add('address');\n        return textElement;\n    }\n\n    public static createDropdownItem() {\n        const itemElement = document.createElement(\"div\");\n        itemElement.classList.add('geoapify-autocomplete-item');\n        return itemElement;\n    }\n}","export class Callbacks {\n    public changeCallbacks: ((selectedOption: any) => void)[] = [];\n    public suggestionsChangeCallbacks: ((options: any[]) => void)[] = [];\n    public inputCallbacks: ((input: string) => void)[] = [];\n    public openCallbacks: ((opened: boolean) => void)[] = [];\n    public closeCallbacks: ((opened: boolean) => void)[] = [];\n\n    addCallback(operation: 'select' | 'suggestions' | 'input' | 'close' | 'open', callback: (param: any) => void) {\n        let currentCallbacks = this.getCallbacksByOperation(operation);\n        if(currentCallbacks) {\n            if (currentCallbacks.indexOf(callback) < 0) {\n                currentCallbacks.push(callback);\n            }\n        }\n    }\n\n    removeCallback(operation: 'select' | 'suggestions' | 'input' | 'close' | 'open', callback?: (param: any) => any) {\n        let currentCallbacks = this.getCallbacksByOperation(operation);\n        if(currentCallbacks) {\n            if (currentCallbacks.indexOf(callback) >= 0) {\n                currentCallbacks.splice(currentCallbacks.indexOf(callback), 1);\n                this.setCallbacksByOperation(operation, currentCallbacks);\n            } else if (!callback) {\n                this.setCallbacksByOperation(operation, []);\n            }\n        }\n    }\n\n    notifyInputChange(currentValue: string) {\n        this.inputCallbacks.forEach(callback => callback(currentValue));\n    }\n\n    notifyChange(feature: any){\n        this.changeCallbacks.forEach(callback => callback(feature));\n    }\n\n    notifySuggestions(features: any) {\n        this.suggestionsChangeCallbacks.forEach(callback => callback(features));\n    }\n\n    notifyOpened() {\n        this.openCallbacks.forEach(callback => callback(true));\n    }\n\n    notifyClosed() {\n        this.closeCallbacks.forEach(callback => callback(false));\n    }\n\n    private getCallbacksByOperation(operation: \"select\" | \"suggestions\" | \"input\" | \"close\" | \"open\") {\n        let currentCallbacks = null;\n        switch (operation) {\n            case 'select': {\n                currentCallbacks = this.changeCallbacks;\n                break;\n            }\n            case 'suggestions': {\n                currentCallbacks = this.suggestionsChangeCallbacks;\n                break;\n            }\n            case 'input': {\n                currentCallbacks = this.inputCallbacks;\n                break;\n            }\n            case 'close': {\n                currentCallbacks = this.closeCallbacks;\n                break;\n            }\n            case 'open': {\n                currentCallbacks = this.openCallbacks;\n                break;\n            }\n        }\n        return currentCallbacks;\n    }\n\n    private setCallbacksByOperation(operation: \"select\" | \"suggestions\" | \"input\" | \"close\" | \"open\",\n                                    callbacks: ((data: any) => void)[]) {\n        switch (operation) {\n            case 'select': {\n                this.changeCallbacks = callbacks;\n                break;\n            }\n            case 'suggestions': {\n                this.suggestionsChangeCallbacks = callbacks;\n                break;\n            }\n            case 'input': {\n                this.inputCallbacks = callbacks;\n                break;\n            }\n            case 'close': {\n                this.closeCallbacks = callbacks;\n                break;\n            }\n            case 'open': {\n                this.openCallbacks = callbacks;\n                break;\n            }\n        }\n    }\n}","import { CalculationHelper } from \"./helpers/calculation.helper\";\nimport { DomHelper } from \"./helpers/dom.helper\";\nimport {\n    BY_CIRCLE,\n    BY_COUNTRYCODE,\n    BY_PLACE,\n    BY_PROXIMITY,\n    BY_RECT\n} from \"./helpers/constants\";\nimport { Callbacks } from \"./helpers/callbacks\";\n\nexport class GeocoderAutocomplete {\n\n    private inputElement: HTMLInputElement;\n    private inputClearButton: HTMLElement;\n    private autocompleteItemsElement: HTMLElement = null;\n\n    /* Focused item in the autocomplete list. This variable is used to navigate with buttons */\n    private focusedItemIndex: number;\n\n    /* Current autocomplete items data (GeoJSON.Feature) */\n    private currentItems: any;\n\n    /* Active request promise reject function. To be able to cancel the promise when a new request comes */\n    private currentPromiseReject: any;\n\n    /* Active place details request promise reject function */\n    private currentPlaceDetailsPromiseReject: any;\n\n    /* We set timeout before sending a request to avoid unnecessary calls */\n    private currentTimeout: number;\n\n    private callbacks = new Callbacks();\n\n    private preprocessHook?: (value: string) => string;\n    private postprocessHook?: (feature: any) => string;\n    private suggestionsFilter?: (suggetions: any[]) => any[];\n\n    private sendGeocoderRequestAlt?: (value: string, geocoderAutocomplete: GeocoderAutocomplete) => Promise<any>;\n    private sendPlaceDetailsRequestAlt?: (feature: any, geocoderAutocomplete: GeocoderAutocomplete) => Promise<any>;\n\n    private geocoderUrl = \"https://api.geoapify.com/v1/geocode/autocomplete\";\n    private placeDetailsUrl = \"https://api.geoapify.com/v2/place-details\";\n\n    private options: GeocoderAutocompleteOptions = {\n        limit: 5,\n        debounceDelay: 100\n    };\n\n    constructor(private container: HTMLElement, private apiKey: string, options?: GeocoderAutocompleteOptions) {\n        this.constructOptions(options);\n\n        this.inputElement = document.createElement(\"input\");\n        DomHelper.createInputElement(this.inputElement, this.options, this.container);\n\n        this.addClearButton();\n\n        this.addEventListeners();\n    }\n\n    public setGeocoderUrl(geocoderUrl: string) {\n        this.geocoderUrl = geocoderUrl;\n    }\n\n    public setPlaceDetailsUrl(placeDetailsUrl: string) {\n        this.placeDetailsUrl = placeDetailsUrl;\n    }\n\n    public setType(type: 'country' | 'state' | 'city' | 'postcode' | 'street' | 'amenity') {\n        this.options.type = type;\n    }\n\n    public setLang(lang: SupportedLanguage) {\n        this.options.lang = lang;\n    }\n\n    public setAddDetails(addDetails: boolean) {\n        this.options.addDetails = addDetails;\n    }\n\n    public setSkipIcons(skipIcons: boolean) {\n        this.options.skipIcons = skipIcons;\n    }\n\n    public setAllowNonVerifiedHouseNumber(allowNonVerifiedHouseNumber: boolean) {\n        this.options.allowNonVerifiedHouseNumber = allowNonVerifiedHouseNumber;\n    }\n\n    public setAllowNonVerifiedStreet(allowNonVerifiedStreet: boolean) {\n        this.options.allowNonVerifiedStreet = allowNonVerifiedStreet;\n    }\n\n    public setCountryCodes(codes: CountyCode[]) {\n        console.warn(\"WARNING! Obsolete function called. Function setCountryCodes() has been deprecated, please use the new addFilterByCountry() function instead!\");\n        this.options.countryCodes = codes;\n    }\n\n    public setPosition(position: GeoPosition) {\n        console.warn(\"WARNING! Obsolete function called. Function setPosition() has been deprecated, please use the new addBiasByProximity() function instead!\");\n        this.options.position = position;\n    }\n\n    public setLimit(limit: number) {\n        this.options.limit = limit;\n    }\n\n    public setValue(value: string) {\n        if (!value) {\n            this.inputClearButton.classList.remove(\"visible\");\n        } else {\n            this.inputClearButton.classList.add(\"visible\");\n        }\n\n        this.inputElement.value = value;\n    }\n\n    public getValue() {\n        return this.inputElement.value;\n    }\n\n    public addFilterByCountry(codes: ByCountryCodeOptions) {\n        this.options.filter[BY_COUNTRYCODE] = codes;\n    }\n\n    public addFilterByCircle(filterByCircle: ByCircleOptions) {\n        this.options.filter[BY_CIRCLE] = filterByCircle;\n    }\n\n    public addFilterByRect(filterByRect: ByRectOptions) {\n        this.options.filter[BY_RECT] = filterByRect;\n    }\n\n    public addFilterByPlace(filterByPlace: string) {\n        this.options.filter[BY_PLACE] = filterByPlace;\n    }\n\n    public clearFilters() {\n        this.options.filter = {};\n    }\n\n    public addBiasByCountry(codes: ByCountryCodeOptions) {\n        this.options.bias[BY_COUNTRYCODE] = codes;\n    }\n\n    public addBiasByCircle(biasByCircle: ByCircleOptions) {\n        this.options.bias[BY_CIRCLE] = biasByCircle;\n    }\n\n    public addBiasByRect(biasByRect: ByRectOptions) {\n        this.options.bias[BY_RECT] = biasByRect;\n    }\n\n    public addBiasByProximity(biasByProximity: ByProximityOptions) {\n        this.options.bias[BY_PROXIMITY] = biasByProximity;\n    }\n\n    public clearBias() {\n        this.options.bias = {};\n    }\n\n    public on(operation: 'select' | 'suggestions' | 'input' | 'close' | 'open', callback: (param: any) => void) {\n        this.callbacks.addCallback(operation, callback);\n    }\n\n    public off(operation: 'select' | 'suggestions' | 'input' | 'close' | 'open', callback?: (param: any) => any) {\n        this.callbacks.removeCallback(operation, callback);\n    }\n\n    public once(operation: 'select' | 'suggestions' | 'input' | 'close' | 'open', callback: (param: any) => any) {\n        this.on(operation, callback);\n\n        const current = this;\n        const currentListener = () => {\n            current.off(operation, callback);\n            current.off(operation, currentListener);\n        }\n\n        this.on(operation, currentListener);\n    }\n\n    public setSuggestionsFilter(suggestionsFilterFunc?: (suggestions: any[]) => any[]) {\n        this.suggestionsFilter = CalculationHelper.returnIfFunction(suggestionsFilterFunc);\n    }\n\n    public setPreprocessHook(preprocessHookFunc?: (value: string) => string) {\n        this.preprocessHook = CalculationHelper.returnIfFunction(preprocessHookFunc);\n    }\n\n    public setPostprocessHook(postprocessHookFunc?: (value: string) => string) {\n        this.postprocessHook = CalculationHelper.returnIfFunction(postprocessHookFunc);\n    }\n\n    public setSendGeocoderRequestFunc(sendGeocoderRequestFunc: (value: string, geocoderAutocomplete: GeocoderAutocomplete) => Promise<any>) {\n        this.sendGeocoderRequestAlt = CalculationHelper.returnIfFunction(sendGeocoderRequestFunc);\n    }\n\n    public setSendPlaceDetailsRequestFunc(sendPlaceDetailsRequestFunc: (feature: any, geocoderAutocomplete: GeocoderAutocomplete) => Promise<any>) {\n        this.sendPlaceDetailsRequestAlt = CalculationHelper.returnIfFunction(sendPlaceDetailsRequestFunc);\n    }\n\n    public isOpen(): boolean {\n        return !!this.autocompleteItemsElement;\n    }\n\n    public close() {\n        this.closeDropDownList();\n    }\n\n    public open() {\n        if (!this.isOpen()) {\n            this.openDropdownAgain();\n        }\n    }\n\n    private sendGeocoderRequestOrAlt(currentValue: string): Promise<any> {\n        if (this.sendGeocoderRequestAlt) {\n            return this.sendGeocoderRequestAlt(currentValue, this);\n        } else {\n            return this.sendGeocoderRequest(currentValue);\n        }\n\n    }\n\n    public sendGeocoderRequest(value: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.currentPromiseReject = reject;\n\n            let url = CalculationHelper.generateUrl(value, this.geocoderUrl, this.apiKey, this.options);\n\n            fetch(url)\n                .then((response) => {\n                    if (response.ok) {\n                        response.json().then(data => resolve(data));\n                    } else {\n                        response.json().then(data => reject(data));\n                    }\n                });\n        });\n    }\n\n    public sendPlaceDetailsRequest(feature: any): Promise<any> {\n        return new Promise((resolve, reject) => {\n\n            if (CalculationHelper.isNotOpenStreetMapData(feature)) {\n                // only OSM data has detailed information; return the original object if the source is different from OSM\n                resolve(feature);\n                return;\n            }\n            \n            this.currentPlaceDetailsPromiseReject = reject;\n            let url = CalculationHelper.generatePlacesUrl(this.placeDetailsUrl, feature.properties.place_id, this.apiKey, this.options);\n\n            fetch(url)\n                .then((response) => {\n                    if (response.ok) {\n                        response.json().then(data => {\n                            if (!data.features.length) {\n                                resolve(feature);\n                            }\n\n                            resolve(data.features[0]);\n                        });\n                    } else {\n                        response.json().then(data => reject(data));\n                    }\n                });\n        });\n    }\n\n    /* Execute a function when someone writes in the text field: */\n    onUserInput(event: Event) {\n        let currentValue = this.inputElement.value;\n        let userEnteredValue = this.inputElement.value;\n\n        this.callbacks.notifyInputChange(currentValue);\n\n        /* Close any already open dropdown list */\n        this.closeDropDownList();\n\n        this.focusedItemIndex = -1;\n\n        this.cancelPreviousRequest();\n\n        this.cancelPreviousTimeout();\n\n        if (!currentValue) {\n            this.removeClearButton();\n            return false;\n        }\n\n        this.showClearButton();\n\n        this.currentTimeout = window.setTimeout(() => {\n            /* Create a new promise and send geocoding request */\n            if (CalculationHelper.returnIfFunction(this.preprocessHook)) {\n                currentValue = this.preprocessHook(currentValue);\n            }\n\n            let promise = this.sendGeocoderRequestOrAlt(currentValue);\n\n            promise.then((data: any) => {\n                this.onDropdownDataLoad(data, userEnteredValue, event);\n            }, (err) => {\n                if (!err.canceled) {\n                    console.log(err);\n                }\n            });\n        }, this.options.debounceDelay);\n    }\n\n    private onDropdownDataLoad(data: any, userEnteredValue: string, event: Event) {\n        if (CalculationHelper.needToCalculateExtendByNonVerifiedValues(data, this.options)) {\n            CalculationHelper.extendByNonVerifiedValues(this.options, data.features, data?.query?.parsed);\n        }\n\n        this.currentItems = data.features;\n\n        if (CalculationHelper.needToFilterDataBySuggestionsFilter(this.currentItems, this.suggestionsFilter)) {\n            this.currentItems = this.suggestionsFilter(this.currentItems);\n        }\n\n        this.callbacks.notifySuggestions(this.currentItems);\n\n        if (!this.currentItems.length) {\n            return;\n        }\n\n        this.createDropdown();\n\n        this.currentItems.forEach((feature: any, index: number) => {\n            this.populateDropdownItem(feature, userEnteredValue, event, index);\n        });\n    }\n\n    private populateDropdownItem(feature: any, userEnteredValue: string, event: Event, index: number) {\n        /* Create a DIV element for each element: */\n        const itemElement = DomHelper.createDropdownItem();\n\n        if (!this.options.skipIcons) {\n            DomHelper.addDropdownIcon(feature, itemElement);\n        }\n\n        const textElement = DomHelper.createDropdownItemText();\n\n        if (CalculationHelper.returnIfFunction(this.postprocessHook)) {\n            const value = this.postprocessHook(feature);\n            textElement.innerHTML = DomHelper.getStyledAddressSingleValue(value, userEnteredValue);\n        } else {\n            textElement.innerHTML = DomHelper.getStyledAddress(feature.properties, userEnteredValue);\n        }\n\n        itemElement.appendChild(textElement);\n        this.addEventListenerOnDropdownClick(itemElement, event, index);\n        this.autocompleteItemsElement.appendChild(itemElement);\n    }\n\n    private addEventListenerOnDropdownClick(itemElement: HTMLDivElement, event: Event, index: number) {\n        itemElement.addEventListener(\"click\", (e) => {\n            event.stopPropagation();\n            this.setValueAndNotify(this.currentItems[index])\n        });\n    }\n\n    private createDropdown() {\n        /*create a DIV element that will contain the items (values):*/\n        this.autocompleteItemsElement = document.createElement(\"div\");\n        this.autocompleteItemsElement.setAttribute(\"class\", \"geoapify-autocomplete-items\");\n\n        this.callbacks.notifyOpened();\n\n        /* Append the DIV element as a child of the autocomplete container:*/\n        this.container.appendChild(this.autocompleteItemsElement);\n    }\n\n    private cancelPreviousTimeout() {\n        if (this.currentTimeout) {\n            window.clearTimeout(this.currentTimeout);\n            this.currentTimeout = null;\n        }\n    }\n\n    private cancelPreviousRequest() {\n        if (this.currentPromiseReject) {\n            this.currentPromiseReject({\n                canceled: true\n            });\n            this.currentPromiseReject = null;\n        }\n    }\n\n    private addEventListeners() {\n        this.inputElement.addEventListener('input', this.onUserInput.bind(this), false);\n        this.inputElement.addEventListener('keydown', this.onUserKeyPress.bind(this), false);\n\n        document.addEventListener(\"click\", (event) => {\n            if (event.target !== this.inputElement) {\n                this.closeDropDownList();\n            } else if (!this.autocompleteItemsElement) {\n                // open dropdown list again\n                this.openDropdownAgain();\n            }\n        });\n    }\n\n    private showClearButton() {\n        this.inputClearButton.classList.add(\"visible\");\n    }\n\n    private removeClearButton() {\n        this.inputClearButton.classList.remove(\"visible\");\n    }\n\n    private onUserKeyPress(event: KeyboardEvent) {\n        if (this.autocompleteItemsElement) {\n            const itemElements: HTMLCollectionOf<HTMLDivElement> = this.autocompleteItemsElement.getElementsByTagName(\"div\");\n            if (event.code === 'ArrowDown') {\n                this.handleArrowDownEvent(event, itemElements);\n            } else if (event.code === 'ArrowUp') {\n                this.handleArrowUpEvent(event, itemElements);\n            } else if (event.code === \"Enter\") {\n                this.handleEnterEvent(event);\n            } else if (event.code === \"Escape\") {\n                /* If the ESC key is presses, close the list */\n                this.closeDropDownList();\n            }\n        } else {\n            if (event.code == 'ArrowDown') {\n                /* Open dropdown list again */\n                this.openDropdownAgain();\n            }\n        }\n    }\n\n    private handleEnterEvent(event: KeyboardEvent) {\n        /* If the ENTER key is pressed and value as selected, close the list*/\n        event.preventDefault();\n        if (this.focusedItemIndex > -1) {\n            if (this.options.skipSelectionOnArrowKey) {\n                // select the location if it wasn't selected by navigation\n                this.setValueAndNotify(this.currentItems[this.focusedItemIndex]);\n            } else {\n                this.closeDropDownList();\n            }\n        }\n    }\n\n    private handleArrowUpEvent(event: KeyboardEvent, itemElements: HTMLCollectionOf<HTMLDivElement>) {\n        event.preventDefault();\n\n        /*If the arrow UP key is pressed, decrease the focusedItemIndex variable:*/\n        this.focusedItemIndex--;\n        if (this.focusedItemIndex < 0) this.focusedItemIndex = (itemElements.length - 1);\n        /*and and make the current item more visible:*/\n        this.setActive(itemElements, this.focusedItemIndex);\n    }\n\n    private handleArrowDownEvent(event: KeyboardEvent, itemElements: HTMLCollectionOf<HTMLDivElement>) {\n        event.preventDefault();\n\n        /*If the arrow DOWN key is pressed, increase the focusedItemIndex variable:*/\n        this.focusedItemIndex++;\n        if (this.focusedItemIndex >= itemElements.length) this.focusedItemIndex = 0;\n        /*and and make the current item more visible:*/\n        this.setActive(itemElements, this.focusedItemIndex);\n    }\n\n    private setActive(items: HTMLCollectionOf<HTMLDivElement>, index: number) {\n        if (!items || !items.length) return false;\n        DomHelper.addActiveClassToDropdownItem(items, index);\n\n        if (!this.options.skipSelectionOnArrowKey) {\n            // Change input value and notify\n            if (CalculationHelper.returnIfFunction(this.postprocessHook)) {\n                this.inputElement.value = this.postprocessHook(this.currentItems[index]);\n            } else {\n                this.inputElement.value = this.currentItems[index].properties.formatted;\n            }\n            this.notifyValueSelected(this.currentItems[index]);\n        }\n    }\n\n    private setValueAndNotify(feature: any) {\n        if (CalculationHelper.returnIfFunction(this.postprocessHook)) {\n            this.inputElement.value = this.postprocessHook(feature);\n        } else {\n            this.inputElement.value = feature.properties.formatted;\n        }\n\n        this.notifyValueSelected(feature);\n\n        /* Close the list of autocompleted values: */\n        this.closeDropDownList();\n    }\n\n    private clearFieldAndNotify(event: MouseEvent) {\n        event.stopPropagation();\n        this.inputElement.value = '';\n        this.removeClearButton();\n\n        this.cancelPreviousRequest();\n\n        this.cancelPreviousTimeout();\n\n        this.closeDropDownList();\n\n        // notify here\n        this.notifyValueSelected(null);\n    }\n\n    private closeDropDownList() {\n        if (this.autocompleteItemsElement) {\n            this.container.removeChild(this.autocompleteItemsElement);\n            this.autocompleteItemsElement = null;\n            this.callbacks.notifyClosed();\n        }\n    }\n\n    private notifyValueSelected(feature: any) {\n        this.cancelPreviousPlaceDetailsRequest();\n\n        if (this.noNeedToRequestPlaceDetails(feature)) {\n            this.callbacks.notifyChange(feature);\n        } else {\n            let promise = this.sendPlaceDetailsRequestOrAlt(feature);\n\n            promise.then((detailesFeature: any) => {\n                this.callbacks.notifyChange(detailesFeature);\n                this.currentPlaceDetailsPromiseReject = null;\n            }, (err) => {\n                if (!err.canceled) {\n                    console.log(err);\n                    this.callbacks.notifyChange(feature);\n                    this.currentPlaceDetailsPromiseReject = null;\n                }\n            });\n        }\n    }\n\n    private sendPlaceDetailsRequestOrAlt(feature: any) {\n        if (this.sendPlaceDetailsRequestAlt) {\n            return this.sendPlaceDetailsRequestAlt(feature, this)\n        } else {\n            return this.sendPlaceDetailsRequest(feature);\n        }\n    }\n\n    private noNeedToRequestPlaceDetails(feature: any) {\n        return !this.options.addDetails || !feature || feature.properties.nonVerifiedParts?.length;\n    }\n\n    private cancelPreviousPlaceDetailsRequest() {\n        if (this.currentPlaceDetailsPromiseReject) {\n            this.currentPlaceDetailsPromiseReject({\n                canceled: true\n            });\n            this.currentPlaceDetailsPromiseReject = null;\n        }\n    }\n\n    private openDropdownAgain() {\n        const event = document.createEvent('Event');\n        event.initEvent('input', true, true);\n        this.inputElement.dispatchEvent(event);\n    }\n\n    private constructOptions(options: GeocoderAutocompleteOptions) {\n        this.options = options ? {...this.options, ...options} : this.options;\n        this.options.filter = this.options.filter || {};\n        this.options.bias = this.options.bias || {};\n\n        if (this.options.countryCodes) {\n            this.addFilterByCountry(this.options.countryCodes);\n        }\n\n        if (this.options.position) {\n            this.addBiasByProximity(this.options.position);\n        }\n    }\n\n    private addClearButton() {\n        this.inputClearButton = document.createElement(\"div\");\n        this.inputClearButton.classList.add(\"geoapify-close-button\");\n        DomHelper.addIcon(this.inputClearButton, 'close');\n        this.inputClearButton.addEventListener(\"click\", this.clearFieldAndNotify.bind(this), false);\n        this.container.appendChild(this.inputClearButton);\n    }\n}\n\nexport interface GeocoderAutocompleteOptions {\n    type?: LocationType;\n    lang?: SupportedLanguage;\n    limit?: number;\n    placeholder?: string;\n    debounceDelay?: number;\n\n    filter?: { [key: string]: ByCircleOptions | ByCountryCodeOptions | ByRectOptions | string },\n    bias?: { [key: string]: ByCircleOptions | ByCountryCodeOptions | ByRectOptions | ByProximityOptions },\n\n    skipIcons?: boolean;\n\n/**\n * @deprecated The property should not be used; it is true by default. Use the addDetails property to add details.\n */\n    skipDetails?: boolean;\n\n    addDetails?: boolean;\n\n    skipSelectionOnArrowKey?: boolean;\n\n    // to remove in the next version\n    position?: GeoPosition;\n    countryCodes?: CountyCode[];\n\n    // extend results with non verified values if needed\n    allowNonVerifiedHouseNumber?: boolean;\n    allowNonVerifiedStreet?: boolean;\n}\n\nexport interface GeoPosition {\n    lat: number;\n    lon: number;\n}\n\nexport type ByCountryCodeOptions = CountyCode[];\n\nexport interface ByProximityOptions {\n    lon: number;\n    lat: number;\n}\n\nexport interface ByCircleOptions {\n    lon: number;\n    lat: number;\n    radiusMeters: number;\n}\n\nexport interface ByRectOptions {\n    lon1: number;\n    lat1: number;\n    lon2: number;\n    lat2: number;\n}\n\nexport type LocationType = 'country' | 'state' | 'city' | 'postcode' | 'street' | 'amenity';\nexport type SupportedLanguage = \"ab\" | \"aa\" | \"af\" | \"ak\" | \"sq\" | \"am\" | \"ar\" | \"an\" | \"hy\" | \"as\" | \"av\" | \"ae\" | \"ay\" | \"az\" | \"bm\" | \"ba\" | \"eu\" | \"be\" | \"bn\" | \"bh\" | \"bi\" | \"bs\" | \"br\" | \"bg\" | \"my\" | \"ca\" | \"ch\" | \"ce\" | \"ny\" | \"zh\" | \"cv\" | \"kw\" | \"co\" | \"cr\" | \"hr\" | \"cs\" | \"da\" | \"dv\" | \"nl\" | \"en\" | \"eo\" | \"et\" | \"ee\" | \"fo\" | \"fj\" | \"fi\" | \"fr\" | \"ff\" | \"gl\" | \"ka\" | \"de\" | \"el\" | \"gn\" | \"gu\" | \"ht\" | \"ha\" | \"he\" | \"hz\" | \"hi\" | \"ho\" | \"hu\" | \"ia\" | \"id\" | \"ie\" | \"ga\" | \"ig\" | \"ik\" | \"io\" | \"is\" | \"it\" | \"iu\" | \"ja\" | \"jv\" | \"kl\" | \"kn\" | \"kr\" | \"ks\" | \"kk\" | \"km\" | \"ki\" | \"rw\" | \"ky\" | \"kv\" | \"kg\" | \"ko\" | \"ku\" | \"kj\" | \"la\" | \"lb\" | \"lg\" | \"li\" | \"ln\" | \"lo\" | \"lt\" | \"lu\" | \"lv\" | \"gv\" | \"mk\" | \"mg\" | \"ms\" | \"ml\" | \"mt\" | \"mi\" | \"mr\" | \"mh\" | \"mn\" | \"na\" | \"nv\" | \"nb\" | \"nd\" | \"ne\" | \"ng\" | \"nn\" | \"no\" | \"ii\" | \"nr\" | \"oc\" | \"oj\" | \"cu\" | \"om\" | \"or\" | \"os\" | \"pa\" | \"pi\" | \"fa\" | \"pl\" | \"ps\" | \"pt\" | \"qu\" | \"rm\" | \"rn\" | \"ro\" | \"ru\" | \"sa\" | \"sc\" | \"sd\" | \"se\" | \"sm\" | \"sg\" | \"sr\" | \"gd\" | \"sn\" | \"si\" | \"sk\" | \"sl\" | \"so\" | \"st\" | \"es\" | \"su\" | \"sw\" | \"ss\" | \"sv\" | \"ta\" | \"te\" | \"tg\" | \"th\" | \"ti\" | \"bo\" | \"tk\" | \"tl\" | \"tn\" | \"to\" | \"tr\" | \"ts\" | \"tt\" | \"tw\" | \"ty\" | \"ug\" | \"uk\" | \"ur\" | \"uz\" | \"ve\" | \"vi\" | \"vo\" | \"wa\" | \"cy\" | \"wo\" | \"fy\" | \"xh\" | \"yi\" | \"yo\" | \"za\";\nexport type CountyCode = \"none\" | \"auto\" | \"ad\" | \"ae\" | \"af\" | \"ag\" | \"ai\" | \"al\" | \"am\" | \"an\" | \"ao\" | \"ap\" | \"aq\" | \"ar\" | \"as\" | \"at\" | \"au\" | \"aw\" | \"az\" | \"ba\" | \"bb\" | \"bd\" | \"be\" | \"bf\" | \"bg\" | \"bh\" | \"bi\" | \"bj\" | \"bm\" | \"bn\" | \"bo\" | \"br\" | \"bs\" | \"bt\" | \"bv\" | \"bw\" | \"by\" | \"bz\" | \"ca\" | \"cc\" | \"cd\" | \"cf\" | \"cg\" | \"ch\" | \"ci\" | \"ck\" | \"cl\" | \"cm\" | \"cn\" | \"co\" | \"cr\" | \"cu\" | \"cv\" | \"cx\" | \"cy\" | \"cz\" | \"de\" | \"dj\" | \"dk\" | \"dm\" | \"do\" | \"dz\" | \"ec\" | \"ee\" | \"eg\" | \"eh\" | \"er\" | \"es\" | \"et\" | \"eu\" | \"fi\" | \"fj\" | \"fk\" | \"fm\" | \"fo\" | \"fr\" | \"ga\" | \"gb\" | \"gd\" | \"ge\" | \"gf\" | \"gh\" | \"gi\" | \"gl\" | \"gm\" | \"gn\" | \"gp\" | \"gq\" | \"gr\" | \"gs\" | \"gt\" | \"gu\" | \"gw\" | \"gy\" | \"hk\" | \"hm\" | \"hn\" | \"hr\" | \"ht\" | \"hu\" | \"id\" | \"ie\" | \"il\" | \"in\" | \"io\" | \"iq\" | \"ir\" | \"is\" | \"it\" | \"jm\" | \"jo\" | \"jp\" | \"ke\" | \"kg\" | \"kh\" | \"ki\" | \"km\" | \"kn\" | \"kp\" | \"kr\" | \"kw\" | \"ky\" | \"kz\" | \"la\" | \"lb\" | \"lc\" | \"li\" | \"lk\" | \"lr\" | \"ls\" | \"lt\" | \"lu\" | \"lv\" | \"ly\" | \"ma\" | \"mc\" | \"md\" | \"me\" | \"mg\" | \"mh\" | \"mk\" | \"ml\" | \"mm\" | \"mn\" | \"mo\" | \"mp\" | \"mq\" | \"mr\" | \"ms\" | \"mt\" | \"mu\" | \"mv\" | \"mw\" | \"mx\" | \"my\" | \"mz\" | \"na\" | \"nc\" | \"ne\" | \"nf\" | \"ng\" | \"ni\" | \"nl\" | \"no\" | \"np\" | \"nr\" | \"nu\" | \"nz\" | \"om\" | \"pa\" | \"pe\" | \"pf\" | \"pg\" | \"ph\" | \"pk\" | \"pl\" | \"pm\" | \"pr\" | \"ps\" | \"pt\" | \"pw\" | \"py\" | \"qa\" | \"re\" | \"ro\" | \"rs\" | \"ru\" | \"rw\" | \"sa\" | \"sb\" | \"sc\" | \"sd\" | \"se\" | \"sg\" | \"sh\" | \"si\" | \"sj\" | \"sk\" | \"sl\" | \"sm\" | \"sn\" | \"so\" | \"sr\" | \"st\" | \"sv\" | \"sy\" | \"sz\" | \"tc\" | \"td\" | \"tf\" | \"tg\" | \"th\" | \"tj\" | \"tk\" | \"tm\" | \"tn\" | \"to\" | \"tr\" | \"tt\" | \"tv\" | \"tw\" | \"tz\" | \"ua\" | \"ug\" | \"um\" | \"us\" | \"uy\" | \"uz\" | \"va\" | \"vc\" | \"ve\" | \"vg\" | \"vi\" | \"vn\" | \"vu\" | \"wf\" | \"ws\" | \"ye\" | \"yt\" | \"za\" | \"zm\" | \"zw\";\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}